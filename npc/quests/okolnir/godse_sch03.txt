//Le Livre d'Ymir http://www.bookofymir.net/
//traduit par No Healing
//===== eAthena Script ======================================= 
//= Falicious Okolnir - Nidhoggr 3
//===== By: ================================================== 
//= L0ne_W0lf
//===== Current Version: ===================================== 
//= 1.2
//===== Compatible With: ===================================== 
//= eAthena SVN
//===== Description: ========================================= 
//= [Aegis Conversion]
//= God Item SE Creation scipt (Brynhild)
//===== Additional Comments: ================================= 
//= 1.0 First version. [L0ne_W0lf]
//= 1.1 First round of bug fixes. (bugreport:3085) [L0ne_W0lf]
//=     Fixed two spawn locations of the key stones in Piamete's room.
//=     Fixed calling an event that doesn't exist when killing Piamete.
//=     Fixed the Wish Maiden not enabling when the boss is killed.
//=     fixed two NPC named that were missed when translating.
//= 1.2 More bug fixes, sorry it took so long. [L0ne_W0lf]
//=     Fixed message on the portal when the okolnir section is full.
//=     Corrected non-angry Piamette not disabling.
//============================================================ 

schg_cas03,84,101,3	script	Guide#gq_sch03	899,{
	set .@GID, GetCastleData("schg_cas03",1);
	if (getcharid(2) == .@GID) {
		if ($siz_sch03_on == 0) {
			mes "[Guide]";
			mes "Ce château renferme un secret bien gardé.";
			mes "Il s'agit de l'^4d4dff'Okolnir'^000000.";
			next;
			switch(select("A propos d'Okolnir.:Se rendre à Okolnir.:Annuler.")) {
			case 1:
				mes "[Guide]";
				mes "Okolnir est une sorte de royaume imaginaire...";
				mes "Je ne sais pas si il existe véritablement - je crois que seules les Valkyries ont la réponse à cette question.";
				next;
				mes "[Guide]";
				mes "Il s'agit d'un lieu créé pour tester les aventuriers créé par les Valkyries...";
				mes "Vous connaissez peut-être les prérequis pour se rendre à Okolnir.";
				next;
				select("Des prérequis?");
				mes "[Guide]";
				mes "Oui, les Valkyries ne prêtent attention qu'à de braves et vaillants aventuriers.";
				mes "Seuls ceux qui en sont dignes pourront accéder à Okolnir et au Valhalla.";
				next;
				mes "[Guide]";
				mes "Ses portes ne s'ouvrent que lorsque tout le monde oeuvre dans ce but.";
				mes "Ce château en est la clé.";
				next;
				mes "[Guide]";
				mes "Vous ne pourrez y accéder que lorsque ^4d4dffl'économie est supérieure à 65 et la défense supérieure à 30^000000.";
				next;
				mes "[Guide]";
				mes "Vous recevrez une récompense si vous surmontez toutes les épreuves que vous réserve la Valkyrie d'Okolnir.";
				next;
				mes "[Guide]";
				mes "Voudriez-vous tenter d'y accéder?";
				close;
			case 2:
				set .@Defence,GetCastleData("schg_cas03",3);
				set .@Economy,GetCastleData("schg_cas03",2);
				if ((.@Economy > 64) && (.@Defence > 29)) {
					mes "[Guide]";
					mes "L'économie et la défense du château sont convenables... Vous pouvez vous y rendre.";
					mes "Voulez-vous vous y rendre maintenant?";
					next;
					switch(select("Allons-y!:Non.")) {
					case 1:
						if (countitem(7839) > 0) {
							delitem 7839,countitem(7839); //Crystal_Key
						}
						mes "[Guide]";
						mes "Bien......";
						mes "Veuillez me suivre...";
						close2;
						warp "que_qsch03",346,32;
						end;
					case 2:
						mes "[Guide]";
						mes "Vous pourrez vous y rendre quand vous voudrez... Tant que ce château reste le vôtre.";
							close;
					}
				}
				else {
					mes "[Guide]";
					mes "Vous ne pouvez pas encore vous y rendre. Il vous faudra d'abord consolider l'économie et les défenses de ce château.";
					close;
				}
			}
		}
		else if ($siz_sch03_on == 1) {
			mes "[Guide]";
			mes "... Bien...";
			mes "Bonne chance.";
			next;
			switch(select("S'y rendre maintenant.:Rester ici.")) {
			case 1:
				if (countitem(7839) > 0) {
					delitem 7839,countitem(7839); //Crystal_Key
				}
				mes "[Guide]";
				mes "J'espère que vous y trouverez ce que vous cherchez...";
				close2;
				warp "que_qsch03",346,32;
				end;
			case 2:
				mes "[Guide]";
				mes "Vraiment?";
				mes "J'espère que vous changerez d'avis.";
				close;
			}
		}
		else if ($siz_sch03_on == 2) {
			mes "[Guide]";
			mes "Même si Okolnir est un royaume imaginaire, bâtir ce lieu demande énormément de temps.";
			
			next;
			mes "[Guide]";
			mes "Recréer ce royaume imaginaire prend environ 12 -13 heures.";
			close;
		}
		else {
			mes "[Guide]";
			mes "Il vous faudra encore attendre.";
			close;
		}
	}
	else {
		mes "[Guide]";
		mes "... Je ne vous ai jamais vu auparavant.";
		mes "Vous êtes un étranger en ces lieux. Vous feriez mieux de sortir sans attendre.";
		close;
	}
	end;

OnInit:
	set $gqse_sch03_miro,0;
	set $gqse_sch03_pcc,0;
	set $gqse_sch03_gd,0;
	set $gqse_sch03_nm,0;
	if ($siz_sch03_on == 1) {
		set $siz_sch03_on,0;
	}
	enablenpc "Guide#gq_sch03";
	end;
}

que_qsch03,345,23,0	warp	Gate02#gq_sch03	1,1,schg_cas03,81,95

que_qsch03,345,82,3	script	Dame aux Souhaits::Wish Maiden#gq_sch03	403,{
	set .@GID, GetCastleData("schg_cas03",1);
	if (getcharid(2) == .@GID) {
		cutin "wish_maiden31",1;
		if (strcharinfo(0) == getguildmaster(.@GID)) {
			mes "[Dame aux Souhaits]";
			mes "Je suis la Dame aux Souhaits, celle qui porte le deuil dans ce royaume imaginaire au nom des êtres humains qui vainquirent ici les dieux.";
			next;
			if ((countitem(7830) > 0) && (countitem(7831) > 0) && (countitem(7832) > 0) && (countitem(7833) > 0) && (countitem(7834) > 0) && (countitem(2357) > 0) && (countitem(7510) > 99) && (countitem(969) > 9) && (countitem(985) > 19)) {
				cutin "wish_maiden11",1;
				mes "[Dame aux Souhaits]";
				mes "Êtes-vous prêt à surmonter les épreuves qui vous attendent ici pour obtenir les splendeurs de la déesse?";
				next;
				switch(select("Oui, je suis prêt:Désolé, j'essaierai plus tard")) {
				case 1:
					cutin "wish_maiden12",1;
					mes "[Dame aux Souhaits]";
					mes "Je vais vous mettre à l'épreuve afin de déterminer si vous méritez de recevoir la lumière divine...";
					mes "Simple, n'est-ce pas?";
					next;
					mes "[Dame aux Souhaits]";
					mes "Okolnir est un royaume imaginaire où il n'y a pas de place pour l'erreur.";
					mes "^ff0000Vous n'aurez qu'une heure.^000000";
					next;
					cutin "wish_maiden31",1;
					mes "[Dame aux Souhaits]";
					mes "Si vous n'en avez pas terminé dans le temps imparti, Okolnir sera détruit, et vous retournerez dans le monde réel.";
					mes "Il vous faudra alors patienter à nouveau avant d'y retourner...";
					next;
					mes "[Dame aux Souhaits]";
					mes "Êtes-vous prêt à relever ce défi?";
					mes "^4d4dffIl faudra que 16 à 20 membres de la guilde soient présents^000000.";
					next;
					cutin "wish_maiden11",1;
					mes "[Dame aux Souhaits]";
					mes "Je vais vous ouvrir les portes d'Okolnir si les membres de votre guilde sont prêts.";
					next;
					switch(select("Nous sommes prêts.:Il nous faut plus de temps.")) {
					case 1:
						set .@saram,getmapusers("que_qsch03");
						if (((.@saram > 15) && (.@saram < 21)) || (getgmlevel() == 99)) {
							cutin "wish_maiden12",1;
							mes "[Dame aux Souhaits]";
							mes "Bien, dans ce cas je vais vous ouvrir les portes d'Okolnir.";
							mes "Je vous attendrai au sommet d'Okolnir...";
							next;
							mes "[Dame aux Souhaits]";
							mes "J'espère que vous pourrez compléter toutes les épreuves avant que le royaume ne soit détruit.";
							mes "Bonne chance.";
							mapannounce "que_qsch03","Dame aux Souhaits: Les portes d'Okolnir viennent de s'ouvrir! N'oubliez pas que vous n'avez qu'une heure.",bc_map,"0x00ff00";
							close2;
							set $gqse_sch03_pcc,.@saram;
							set $siz_sch03_on,1;
							donpcevent "#okolnir_sch03::OnEnable";
							disablenpc "Wish Maiden#gq_sch03";
							cutin "wish_maiden11",255;
							announce "["+ strcharinfo(0) +"], de la guilde ["+ GetGuildName(.@GID) +"] vient d'ouvrir les portes du royaume d'Okolnir.",bc_all,"0x70dbdb";
							end;
						}
						else {
							cutin "wish_maiden13",1;
							mes "[Dame aux Souhaits]";
							mes "Il faut que de 16 à 20 membres de la guilde soient présents pour ouvrir les portes d'Okolnir.";
							mes "Revenez quand vous serez prêt.";
							close2;
						}
						break;
					case 2:
						cutin "wish_maiden13",1;
						mes "[Dame aux Souhaits]";
						mes "Vous ne devriez pas hésiter et tenter votre chance tant que vous le pouvez. Vous n'avez qu'à rassembler les autres membres de votre guilde.";
								close2;
					}
					break;
				case 2:
					cutin "wish_maiden32",1;
					mes "[Dame aux Souhaits]";
					mes "Avez-vous peur des épreuves que j'ai préparées pour vous?";

					mes "....";
					next;
					cutin "wish_maiden13",1;
					mes "[Dame aux Souhaits]";
					mes "Pensiez-vous pouvoir recevoir la lumière divine sans vous en montrer digne? Vous me décevez affreusement. Partez, maintenant.";
				}
			}
			else {
				cutin "wish_maiden11",1;
				mes "[Dame aux Souhaits]";
mes "Désirez-vous entrer?";
				mes "Seuls ceux qui y seront préparés pourront pénétrer dans le royaume d'Okolnir. Vous devrez m'apportez plusieurs objets avant que je n'ouvre ses portes.";
				next;
				mes "[Dame aux Souhaits]";
				mes "1 Larme de Déesse";
				mes "1 Relique de Valkyrie";
				mes "1 Morceau d'Armure de Brynhild";
				mes "1 urne de Restes de Héros";
				mes "1 Armure de Valkyrie";
				mes "1 Anneau Andvari.";
				next;
				mes "[Dame aux Souhaits]";
				mes "En plus de cela, il me faudra 10 Lingots, 20 Eluniums, et plusieurs Fleurs du Walhalla en guise d'offrande.";
				next;
				mes "[Dame aux Souhaits]";
				mes "J'ouvrirai les portes lorsque vous aurez tout cela.";
				next;
				mes "[Dame aux Souhaits]";
				mes ".... ";
				mes "...........N'oubliez pas que la déesse a posé son regard sur vous. Vous devez faire preuve de vaillance et de bravoure pour mériter ses faveurs...";
				next;
				mes "[Dame aux Souhaits]";
				mes "Gardez bien à l'esprit que vous devez m'apporter autant de Fleurs du Valhalla que vous pouvez. J'espère que vos rêves se réaliseront.";				mes "[Dame aux Souhaits]";
				mes "Je répondrai à vos souhaits lorsque vous m'aurez apporté tout cela.";
				close2;
			}
		}
		else {
			cutin "wish_maiden31",1;
			mes "[Dame aux Souhaits]";
			mes "Je suis la Dame aux Souhaits, celle qui porte le deuil dans ce royaume imaginaire au nom des êtres humains qui vainquirent ici les dieux.";
			next;
			mes "[Dame aux Souhaits]";
			mes "Conduisez-moi à celui qui vous a introduit ici.";
			mes ".. Laissez-moi décider de son sort.";
			close2;
		}
	}
	else {
		cutin "wish_maiden13",1;
		mes "[Dame aux Souhaits]";
		mes "...Vous n'êtes pas digne de vous trouver ici.";
		close2;
		percentheal -100,0;
		cutin "wish_maiden11",255;
		end;
	}
	cutin "wish_maiden11",255;
	end;

OnInit:
	if ($siz_sch03_on == 0) {
		enablenpc "Wish Maiden#gq_sch03";
	}
	else {
		disablenpc "Wish Maiden#gq_sch03";
	}
	end;
}

que_qsch03,346,81,0	script	Gate01#gq_sch03	45,1,1,{
	end;

OnInit:
	disablenpc "Gate01#gq_sch03";
	end;

OnEnable:
	enablenpc "Gate01#gq_sch03";
	setcell "que_qsch03",58,302,63,302,cell_walkable,0;
	setcell "que_qsch03",58,302,63,302,cell_shootable,0;
	end;

OnDisable:
	disablenpc "Gate01#gq_sch03";
	killmonsterall "que_qsch03";
	end;

OnTouch:
	set .@saram,getmapusers("que_qsch03");
	if (.@saram < 21) {
		if ($gqse_sch03_miro == $gqse_sch03_pcc) {
			set .@point,rand(1,5);
			if (.@point == 1) {
				warp "que_qsch03",72,271;
				end;
			}
			else if (.@point == 2) {
				warp "que_qsch03",45,243;
				end;
			}
			else if (.@point == 3) {
				warp "que_qsch03",102,248;
				end;
			}
			else if (.@point == 4) {
				warp "que_qsch03",102,300;
				end;
			}
			else {
				warp "que_qsch03",46,300;
				end;
			}
		}
		else if ($gqse_sch03_miro == 0) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch03",77,271,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch03",77,271,strcharinfo(0),1659,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch03",77,271,strcharinfo(0),1662,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch03",77,271,strcharinfo(0),1663,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch03",77,271,strcharinfo(0),1660,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch03",77,271,strcharinfo(0),1661,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else {
				monster "que_qsch03",77,271,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			set $gqse_sch03_miro,1;
			warp "que_qsch03",72,271;
			end;
		}
		else if ($gqse_sch03_miro == 1) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch03",63,278,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch03",63,278,strcharinfo(0),1659,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch03",63,278,strcharinfo(0),1662,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch03",63,278,strcharinfo(0),1663,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch03",63,278,strcharinfo(0),1660,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch03",63,278,strcharinfo(0),1661,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else {
				monster "que_qsch03",63,278,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			set $gqse_sch03_miro,2;
			warp "que_qsch03",63,282;
			end;
		}
		else if ($gqse_sch03_miro == 2) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch03",63,294,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch03",63,294,strcharinfo(0),1659,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch03",63,294,strcharinfo(0),1662,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch03",63,294,strcharinfo(0),1663,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch03",63,294,strcharinfo(0),1660,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch03",63,294,strcharinfo(0),1661,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else {
				monster "que_qsch03",63,294,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			set $gqse_sch03_miro,3;
			warp "que_qsch03",59,294;
			end;
		}
		else if ($gqse_sch03_miro == 3) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch03",50,300,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch03",50,300,strcharinfo(0),1659,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch03",50,300,strcharinfo(0),1662,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch03",50,300,strcharinfo(0),1663,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch03",50,300,strcharinfo(0),1660,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch03",50,300,strcharinfo(0),1661,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else {
				monster "que_qsch03",50,300,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			set $gqse_sch03_miro,4;
			warp "que_qsch03",46,300;
			end;
		}
		else if ($gqse_sch03_miro == 4) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch03",51,280,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch03",51,280,strcharinfo(0),1659,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch03",51,280,strcharinfo(0),1662,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch03",51,280,strcharinfo(0),1663,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch03",51,280,strcharinfo(0),1660,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch03",51,280,strcharinfo(0),1661,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else {
				monster "que_qsch03",51,280,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			set $gqse_sch03_miro,5;
			warp "que_qsch03",51,285;
			end;
		}
		else if ($gqse_sch03_miro == 5) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch03",51,258,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch03",51,258,strcharinfo(0),1659,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch03",51,258,strcharinfo(0),1662,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch03",51,258,strcharinfo(0),1663,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch03",51,258,strcharinfo(0),1660,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch03",51,258,strcharinfo(0),1661,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else {
				monster "que_qsch03",51,258,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			set $gqse_sch03_miro,6;
			warp "que_qsch03",51,262;
			end;
		}
		else if ($gqse_sch03_miro == 6) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch03",49,243,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch03",49,243,strcharinfo(0),1659,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch03",49,243,strcharinfo(0),1662,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch03",49,243,strcharinfo(0),1663,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch03",49,243,strcharinfo(0),1660,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch03",49,243,strcharinfo(0),1661,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else {
				monster "que_qsch03",49,243,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			set $gqse_sch03_miro,7;
			warp "que_qsch03",45,243;
			end;
		}
		else if ($gqse_sch03_miro == 7) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch03",86,249,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch03",86,249,strcharinfo(0),1659,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch03",86,249,strcharinfo(0),1662,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch03",86,249,strcharinfo(0),1663,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch03",86,249,strcharinfo(0),1660,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch03",86,249,strcharinfo(0),1661,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else {
				monster "que_qsch03",86,249,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			set $gqse_sch03_miro,8;
			warp "que_qsch03",82,249;
			end;
		}
		else if ($gqse_sch03_miro == 8) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch03",102,243,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch03",102,243,strcharinfo(0),1659,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch03",102,243,strcharinfo(0),1662,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch03",102,243,strcharinfo(0),1663,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch03",102,243,strcharinfo(0),1660,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch03",102,243,strcharinfo(0),1661,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else {
				monster "que_qsch03",102,243,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			set $gqse_sch03_miro,9;
			warp "que_qsch03",102,248;
			end;
		}
		else if ($gqse_sch03_miro == 9) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch03",90,256,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch03",90,256,strcharinfo(0),1659,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch03",90,256,strcharinfo(0),1662,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch03",90,256,strcharinfo(0),1663,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch03",90,256,strcharinfo(0),1660,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch03",90,256,strcharinfo(0),1661,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else {
				monster "que_qsch03",90,256,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			set $gqse_sch03_miro,10;
			warp "que_qsch03",90,260;
			end;
		}
		else if ($gqse_sch03_miro == 10) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch03",90,283,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch03",90,283,strcharinfo(0),1659,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch03",90,283,strcharinfo(0),1662,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch03",90,283,strcharinfo(0),1663,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch03",90,283,strcharinfo(0),1660,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch03",90,283,strcharinfo(0),1661,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else {
				monster "que_qsch03",90,283,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			set $gqse_sch03_miro,11;
			warp "que_qsch03",90,280;
			end;
		}
		else if ($gqse_sch03_miro == 11) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch03",102,295,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch03",102,295,strcharinfo(0),1659,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch03",102,295,strcharinfo(0),1662,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch03",102,295,strcharinfo(0),1663,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch03",102,295,strcharinfo(0),1660,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch03",102,295,strcharinfo(0),1661,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else {
				monster "que_qsch03",102,295,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			set $gqse_sch03_miro,12;
			warp "que_qsch03",102,300;
			end;
		}
		else if ($gqse_sch03_miro == 12) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch03",96,285,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch03",96,285,strcharinfo(0),1659,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch03",96,285,strcharinfo(0),1662,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch03",96,285,strcharinfo(0),1663,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch03",96,285,strcharinfo(0),1660,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch03",96,285,strcharinfo(0),1661,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else {
				monster "que_qsch03",96,285,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			set $gqse_sch03_miro,13;
			warp "que_qsch03",96,290;
			end;
		}
		else if ($gqse_sch03_miro == 13) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch03",63,278,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch03",63,278,strcharinfo(0),1659,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch03",63,278,strcharinfo(0),1662,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch03",63,278,strcharinfo(0),1663,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch03",63,278,strcharinfo(0),1660,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch03",63,278,strcharinfo(0),1661,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else {
				monster "que_qsch03",63,278,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			set $gqse_sch03_miro,14;
			warp "que_qsch03",63,282;
			end;
		}
		else if ($gqse_sch03_miro == 14) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch03",65,243,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch03",65,243,strcharinfo(0),1659,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch03",65,243,strcharinfo(0),1662,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch03",65,243,strcharinfo(0),1663,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch03",65,243,strcharinfo(0),1660,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch03",65,243,strcharinfo(0),1661,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else {
				monster "que_qsch03",65,243,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			set $gqse_sch03_miro,15;
			warp "que_qsch03",61,243;
			end;
		}
		else if ($gqse_sch03_miro == 15) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch03",73,249,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch03",73,249,strcharinfo(0),1659,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch03",73,249,strcharinfo(0),1662,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch03",73,249,strcharinfo(0),1663,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch03",73,249,strcharinfo(0),1660,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch03",73,249,strcharinfo(0),1661,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else {
				monster "que_qsch03",73,249,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			set $gqse_sch03_miro,16;
			warp "que_qsch03",70,249;
			end;
		}
		else if ($gqse_sch03_miro == 16) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch03",102,275,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch03",102,275,strcharinfo(0),1659,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch03",102,275,strcharinfo(0),1662,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch03",102,275,strcharinfo(0),1663,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch03",102,275,strcharinfo(0),1660,1,"#Gate_manager_sch03::OnMyMobDead";
				end;
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch03",102,275,strcharinfo(0),1661,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else {
				monster "que_qsch03",102,275,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			set $gqse_sch03_miro,17;
			warp "que_qsch03",102,281;
			end;
		}
		else if ($gqse_sch03_miro == 17) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch03",70,300,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch03",70,300,strcharinfo(0),1659,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch03",70,300,strcharinfo(0),1662,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch03",70,300,strcharinfo(0),1663,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch03",70,300,strcharinfo(0),1660,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch03",70,300,strcharinfo(0),1661,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else {
				monster "que_qsch03",70,300,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			set $gqse_sch03_miro,18;
			warp "que_qsch03",66,300;
			end;
		}
		else if ($gqse_sch03_miro == 18) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch03",57,255,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch03",57,255,strcharinfo(0),1659,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch03",57,255,strcharinfo(0),1662,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch03",57,255,strcharinfo(0),1663,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch03",57,255,strcharinfo(0),1660,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch03",57,255,strcharinfo(0),1661,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else {
				monster "que_qsch03",57,255,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			set $gqse_sch03_miro,19;
			warp "que_qsch03",57,258;
			end;
		}
		else if ($gqse_sch03_miro == 19) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch03",84,277,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch03",84,277,strcharinfo(0),1659,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch03",84,277,strcharinfo(0),1662,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch03",84,277,strcharinfo(0),1663,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch03",84,277,strcharinfo(0),1660,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch03",84,277,strcharinfo(0),1661,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			else {
				monster "que_qsch03",84,277,strcharinfo(0),1652,1,"#Gate_manager_sch03::OnMyMobDead";
			}
			set $gqse_sch03_miro,20;
			warp "que_qsch03",84,280;
			end;
		}
	}
	else {
		mes "Il y a déjà trop de participants. Vous ne pouvez pas entrer.";
		close;
	}
	end;
}

que_qsch03,1,4,0	script	#Gate_manager_sch03	844,{
OnMyMobDead:
	if ($gqse_sch03_miro == $gqse_sch03_pcc) {
		if (mobcount("que_qsch03","#Gate_manager_sch03::OnMyMobDead") == 0) {
			donpcevent "#gq_miromob2_sch03::OnEnable";
		}
	}
	end;
}

que_qsch03,1,4,0	script	#gq_miromob2_sch03	844,{
OnEnable:
	initnpctimer;
	end;

OnTimer1000:
	mapannounce "que_qsch03","Dame aux Souhaits: Comment vous sentez-vous aux côtés des fantômes du passé? Ce n'est qu'un début...",bc_map,"0x00ff00";
	end;

OnTimer6000:
	mapannounce "que_qsch03","Dame aux Souhaits: Les choses que vous voyez ne sont pas réelles. Ne laissez pas votre esprit s'égarer dans le Jardin Mystique.",bc_map,"0x00ff00";
	monster "que_qsch03",72,271,"--ja--",1640,1,"#gq_miromob2_sch03::OnMyMobDead";
	monster "que_qsch03",63,282,"--ja--",1645,1,"#gq_miromob2_sch03::OnMyMobDead";
	monster "que_qsch03",59,294,"--ja--",1644,1,"#gq_miromob2_sch03::OnMyMobDead";
	monster "que_qsch03",46,300,"--ja--",1643,1,"#gq_miromob2_sch03::OnMyMobDead";
	monster "que_qsch03",51,285,"--ja--",1641,1,"#gq_miromob2_sch03::OnMyMobDead";
	monster "que_qsch03",51,262,"--ja--",1642,1,"#gq_miromob2_sch03::OnMyMobDead";

	monster "que_qsch03",45,243,"--ja--",1640,1,"#gq_miromob2_sch03::OnMyMobDead";
	monster "que_qsch03",82,249,"--ja--",1645,1,"#gq_miromob2_sch03::OnMyMobDead";
	monster "que_qsch03",102,248,"--ja--",1644,1,"#gq_miromob2_sch03::OnMyMobDead";
	monster "que_qsch03",90,260,"--ja--",1643,1,"#gq_miromob2_sch03::OnMyMobDead";
	monster "que_qsch03",90,280,"--ja--",1641,1,"#gq_miromob2_sch03::OnMyMobDead";
	monster "que_qsch03",102,300,"--ja--",1642,1,"#gq_miromob2_sch03::OnMyMobDead";

	monster "que_qsch03",63,282,"--ja--",1640,1,"#gq_miromob2_sch03::OnMyMobDead";
	monster "que_qsch03",61,243,"--ja--",1645,1,"#gq_miromob2_sch03::OnMyMobDead";
	monster "que_qsch03",70,249,"--ja--",1644,1,"#gq_miromob2_sch03::OnMyMobDead";
	monster "que_qsch03",102,281,"--ja--",1643,1,"#gq_miromob2_sch03::OnMyMobDead";
	monster "que_qsch03",66,300,"--ja--",1641,1,"#gq_miromob2_sch03::OnMyMobDead";
	monster "que_qsch03",57,258,"--ja--",1642,1,"#gq_miromob2_sch03::OnMyMobDead";
	stopnpctimer;
	end;

Onreset:
	killmonster "que_qsch03","#gq_miromob2_sch03::OnMyMobDead";
	stopnpctimer;
	end;

OnMyMobDead:
	if (mobcount("que_qsch03","#gq_miromob2_sch03::OnMyMobDead") == 0) {
		mapannounce "que_qsch03","La sortie du Jardin Mystique vient de s'ouvrir.",bc_map,"0x00ff00";
		setcell "que_qsch03",58,302,63,302,cell_walkable,1;
		setcell "que_qsch03",58,302,63,302,cell_shootable,1;
		donpcevent "#Maze_Manager_sch03::OnDisable";
	}
	end;
}

que_qsch03,1,1,0	script	#okolnir_sch03	844,{

OnEnable:
	donpcevent "Gate01#gq_sch03::OnEnable";
	donpcevent "#Maze_Manager_sch03::OnEnable";
	donpcevent "#event_start01_sch03::OnEnable";
	donpcevent "#gd_sch03_mobctrl::OnEnable";
	enablenpc "Guard of Shadow#sch03_01";
	enablenpc "Guard of Shadow#sch03_02";
	enablenpc "Guard of Shadow#sch03_03";
	enablenpc "Guard of Shadow#sch03_04";
	enablenpc "Temple Guard#sch03_ac01";
	enablenpc "Temple Guard#sch03_ac02";
	enablenpc "Temple Guard#sch03_ac03";
	enablenpc "Temple Guard#sch03_ac04";
	enablenpc "Temple Keeper#sch03_ac01";
	enablenpc "Temple Keeper#sch03_ac02";
	initnpctimer;
	end;

OnDisable:
	disablenpc "Wish Maiden#gq_sch03";
	donpcevent "#gq_miromob2_sch03::Onreset";
	disablenpc "Piamette#sch03";
	donpcevent "#gdtimer01_sch03::Onstop";
	donpcevent "#gdtimer02_sch03::Onstop";
	donpcevent "#piamette_sch03::Onreset";
	donpcevent "Wish Maiden#sch03_boss::OnDisable";
	donpcevent "Wish Maiden#sch03_gift::OnDisable";
	donpcevent "#gd_sch03_mobctrl::Onreset";
	donpcevent "Gate01#gq_sch03::OnDisable";
	donpcevent "#Maze_Manager_sch03::OnDisable";
	donpcevent "#event_start01_sch03::OnDisable";
	donpcevent "#nm_switch_sch03::OnDisable";
	donpcevent "#nmsomsch03_jin01::OnDisable";
	donpcevent "#nmsomsch03_jin02::OnDisable";
	donpcevent "#nmsomsch03_jin03::OnDisable";
	donpcevent "Guard of Shadow#sch03_01::OnDisable";
	donpcevent "Guard of Shadow#sch03_02::OnDisable";
	donpcevent "Guard of Shadow#sch03_03::OnDisable";
	donpcevent "Guard of Shadow#sch03_04::OnDisable";
	donpcevent "Temple Guard#sch03_ac01::OnDisable";
	donpcevent "Temple Guard#sch03_ac02::OnDisable";
	donpcevent "Temple Guard#sch03_ac03::OnDisable";
	donpcevent "Temple Guard#sch03_ac04::OnDisable";
	donpcevent "Temple Keeper#sch03_ac01::OnDisable";
	donpcevent "Temple Keeper#sch03_ac02::OnDisable";
	disablenpc "#to_agit_sch03_gate";
	donpcevent "#sch03_stone01::Onreset";
	donpcevent "#sch03_stone02::Onreset";
	donpcevent "#sch03_stone03::Onreset";
	disablenpc "#sch03_cage01";
	disablenpc "#sch03_cage02";
	disablenpc "#sch03_cage03";
	disablenpc "#sch03_cage04";
	disablenpc "#sch03_cage05";
	disablenpc "#sch03_cage06";
	disablenpc "windpath03_sch03";
	disablenpc "windpath04_sch03";
	set $gqse_sch03_miro,0;
	set $gqse_sch03_pcc,0;
	set $gqse_sch03_gd,0;
	set $gqse_sch03_nm,0;
	stopnpctimer;
	end;

Onstop:
	stopnpctimer;
	end;

OnTimer1000:
	mapannounce "que_qsch03","Dame aux Souhaits: Okolnir disparaîtra dans une heure. Faites de votre mieux!",bc_map,"0x00ff00";
	end;

OnTimer1800000:
	mapannounce "que_qsch03","Okolnir disparaîtra dans 30 minutes.",bc_map,"0xff0000";
	end;

OnTimer2400000:
	mapannounce "que_qsch03","Okolnir disparaîtra dans 20 minutes.",bc_map,"0xff0000";
	end;

OnTimer3000000:
	mapannounce "que_qsch03","Okolnir disparaîtra dans 10 minutes.",bc_map,"0xff0000";
	end;

OnTimer3300000:
	mapannounce "que_qsch03","Okolnir disparaîtra dans 5 minutes.",bc_map,"0xff0000";
	end;

OnTimer3360000:
	mapannounce "que_qsch03","Okolnir disparaîtra dans 4 minutes.",bc_map,"0xff0000";
	end;

OnTimer3420000:
	mapannounce "que_qsch03","Okolnir disparaîtra dans 3 minutes.",bc_map,"0xff0000";
	end;

OnTimer3480000:
	mapannounce "que_qsch03","Okolnir disparaîtra dans 2 minutes.",bc_map,"0xff0000";
	end;

OnTimer3540000:
	mapannounce "que_qsch03","Okolnir disparaîtra dans 1 minute.",bc_map,"0xff0000";
	end;

OnTimer3600000:
	mapannounce "que_qsch03","Okolnir commence à disparaître.",bc_map,"0x4d4dff";
	disablenpc "Wish Maiden#gq_sch03";
	donpcevent "#gq_miromob2_sch03::Onreset";
	disablenpc "Piamette#sch03";
	donpcevent "#gdtimer01_sch03::Onstop";
	donpcevent "#gdtimer02_sch03::Onstop";
	donpcevent "#piamette_sch03::Onreset";
	donpcevent "Wish Maiden#sch03_boss::onDisable";
	donpcevent "Wish Maiden#sch03_gift::OnDisable";
	donpcevent "#gd_sch03_mobctrl::Onreset";
	donpcevent "Gate01#gq_sch03::OnDisable";
	donpcevent "#Maze_Manager_sch03::OnDisable";
	donpcevent "#event_start01_sch03::OnDisable";
	donpcevent "#nm_switch_sch03::OnDisable";
	donpcevent "#nmsomsch03_jin01::OnDisable";
	donpcevent "#nmsomsch03_jin02::OnDisable";
	donpcevent "#nmsomsch03_jin03::OnDisable";
	donpcevent "Guard of Shadow#sch03_01::OnDisable";
	donpcevent "Guard of Shadow#sch03_02::OnDisable";
	donpcevent "Guard of Shadow#sch03_03::OnDisable";
	donpcevent "Guard of Shadow#sch03_04::OnDisable";
	donpcevent "Temple Guard#sch03_ac01::OnDisable";
	donpcevent "Temple Guard#sch03_ac02::OnDisable";
	donpcevent "Temple Guard#sch03_ac03::OnDisable";
	donpcevent "Temple Guard#sch03_ac04::OnDisable";
	donpcevent "Temple Keeper#sch03_ac01::OnDisable";
	donpcevent "Temple Keeper#sch03_ac02::OnDisable";
	disablenpc "#to_agit_sch03_gate";
	donpcevent "#sch03_stone01::Onreset";
	donpcevent "#sch03_stone02::Onreset";
	donpcevent "#sch03_stone03::Onreset";
	disablenpc "#sch03_cage01";
	disablenpc "#sch03_cage02";
	disablenpc "#sch03_cage03";
	disablenpc "#sch03_cage04";
	disablenpc "#sch03_cage05";
	disablenpc "#sch03_cage06";
	disablenpc "windpath03_sch03";
	disablenpc "windpath04_sch03";
	end;

OnTimer3605000:
	mapannounce "que_qsch03","Dame aux Souhaits: ... Vous sombrez dans un profond sommeil à l'intérieur d'Okolnir... ",bc_map,"0x00ff00";
	end;

OnTimer3608000:
		mapannounce "que_qsch03","Dame aux Souhaits: ... Gardez courage ... et tentez à nouveau votre chance... ",bc_map,"0x00ff00";
	end;

OnTimer3610000:
	set $gqse_sch03_miro,0;
	set $gqse_sch03_pcc,0;
	set $gqse_sch03_gd,0;
	set $gqse_sch03_nm,0;
	mapwarp "que_qsch03","schg_cas03",81,95;
	end;

OnTimer3611000:
	donpcevent "#okolnir_sch03_time01::OnEnable";
	stopnpctimer;
	end;
}

que_qsch03,1,2,0	script	#Maze_Manager_sch03	844,{
OnInit:
	donpcevent "#miro_bf_sch03::OnDisable";
	donpcevent "#miro_rf_sch03::OnDisable";
	donpcevent "#miro_yf_sch03::OnDisable";
	end;

OnEnable:
	initnpctimer;
	end;

OnDisable:
	donpcevent "#miro_bf_sch03::OnDisable";
	donpcevent "#miro_rf_sch03::OnDisable";
	donpcevent "#miro_yf_sch03::OnDisable";
	stopnpctimer;
	end;

OnTimer1000:
	donpcevent "#miro_rf_sch03::OnDisable";
	end;

OnTimer2000:
	donpcevent "#miro_yf_sch03::OnDisable";
	end;

OnTimer3000:
	donpcevent "#miro_bf_sch03::OnEnable";
	end;

OnTimer120000:
	donpcevent "#miro_bf_sch03::OnDisable";
	end;

OnTimer121000:
	donpcevent "#miro_yf_sch03::OnDisable";
	end;

OnTimer123000:
	donpcevent "#miro_rf_sch03::OnEnable";
	end;

OnTimer240000:
	donpcevent "#miro_bf_sch03::OnDisable";
	end;

OnTimer241000:
	donpcevent "#miro_rf_sch03::OnDisable";
	end;

OnTimer242000:
	donpcevent "#miro_yf_sch03::OnEnable";
	end;

OnTimer360000:
	donpcevent "#Maze_Manager_sch03::OnEnable";
	end;
}

que_qsch03,2,1,0	script	#miro_bf_sch03	844,{

OnEnable:
	monster "que_qsch03",44,270," ",1934,1,"#miro_bf_sch03::OnMyMobDead";
	monster "que_qsch03",46,270," ",1934,1,"#miro_bf_sch03::OnMyMobDead";
	monster "que_qsch03",50,287," ",1934,1,"#miro_bf_sch03::OnMyMobDead";
	monster "que_qsch03",52,287," ",1934,1,"#miro_bf_sch03::OnMyMobDead";
	monster "que_qsch03",50,265," ",1934,1,"#miro_bf_sch03::OnMyMobDead";
	monster "que_qsch03",52,265," ",1934,1,"#miro_bf_sch03::OnMyMobDead";
	monster "que_qsch03",56,279," ",1934,1,"#miro_bf_sch03::OnMyMobDead";
	monster "que_qsch03",58,279," ",1934,1,"#miro_bf_sch03::OnMyMobDead";
	monster "que_qsch03",64,301," ",1934,1,"#miro_bf_sch03::OnMyMobDead";
	monster "que_qsch03",64,298," ",1934,1,"#miro_bf_sch03::OnMyMobDead";
	monster "que_qsch03",62,272," ",1934,1,"#miro_bf_sch03::OnMyMobDead";
	monster "que_qsch03",64,272," ",1934,1,"#miro_bf_sch03::OnMyMobDead";
	monster "que_qsch03",58,245," ",1934,1,"#miro_bf_sch03::OnMyMobDead";
	monster "que_qsch03",58,243," ",1934,1,"#miro_bf_sch03::OnMyMobDead";
	monster "que_qsch03",72,289," ",1934,1,"#miro_bf_sch03::OnMyMobDead";
	monster "que_qsch03",72,287," ",1934,1,"#miro_bf_sch03::OnMyMobDead";
	monster "que_qsch03",68,257," ",1934,1,"#miro_bf_sch03::OnMyMobDead";
	monster "que_qsch03",68,255," ",1934,1,"#miro_bf_sch03::OnMyMobDead";
	monster "que_qsch03",73,263," ",1934,1,"#miro_bf_sch03::OnMyMobDead";
	monster "que_qsch03",73,261," ",1934,1,"#miro_bf_sch03::OnMyMobDead";
	monster "que_qsch03",75,251," ",1934,1,"#miro_bf_sch03::OnMyMobDead";
	monster "que_qsch03",75,249," ",1934,1,"#miro_bf_sch03::OnMyMobDead";
	monster "que_qsch03",79,283," ",1934,1,"#miro_bf_sch03::OnMyMobDead";
	monster "que_qsch03",79,281," ",1934,1,"#miro_bf_sch03::OnMyMobDead";
	monster "que_qsch03",82,271," ",1934,1,"#miro_bf_sch03::OnMyMobDead";
	monster "que_qsch03",84,271," ",1934,1,"#miro_bf_sch03::OnMyMobDead";
	monster "que_qsch03",89,295," ",1934,1,"#miro_bf_sch03::OnMyMobDead";
	monster "que_qsch03",89,293," ",1934,1,"#miro_bf_sch03::OnMyMobDead";
	monster "que_qsch03",88,276," ",1934,1,"#miro_bf_sch03::OnMyMobDead";
	monster "que_qsch03",90,276," ",1934,1,"#miro_bf_sch03::OnMyMobDead";
	monster "que_qsch03",88,266," ",1934,1,"#miro_bf_sch03::OnMyMobDead";
	monster "que_qsch03",90,266," ",1934,1,"#miro_bf_sch03::OnMyMobDead";
	monster "que_qsch03",94,256," ",1934,1,"#miro_bf_sch03::OnMyMobDead";
	monster "que_qsch03",96,256," ",1934,1,"#miro_bf_sch03::OnMyMobDead";
	monster "que_qsch03",64,301," ",1934,1,"#miro_bf_sch03::OnMyMobDead";
	monster "que_qsch03",64,299," ",1934,1,"#miro_bf_sch03::OnMyMobDead";
	monster "que_qsch03",100,251," ",1934,1,"#miro_bf_sch03::OnMyMobDead";
	monster "que_qsch03",102,251," ",1934,1,"#miro_bf_sch03::OnMyMobDead";
	setcell "que_qsch03",44,270,47,270,cell_walkable,0;
	setcell "que_qsch03",44,270,47,270,cell_shootable,0;
	setcell "que_qsch03",50,287,53,287,cell_walkable,0;
	setcell "que_qsch03",50,287,53,287,cell_shootable,0;
	setcell "que_qsch03",50,265,53,265,cell_walkable,0;
	setcell "que_qsch03",50,265,53,265,cell_shootable,0;
	setcell "que_qsch03",56,279,59,279,cell_walkable,0;
	setcell "que_qsch03",56,279,59,279,cell_shootable,0;
	setcell "que_qsch03",64,298,64,301,cell_walkable,0;
	setcell "que_qsch03",64,298,64,301,cell_shootable,0;
	setcell "que_qsch03",62,272,65,272,cell_walkable,0;
	setcell "que_qsch03",62,272,65,272,cell_shootable,0;
	setcell "que_qsch03",58,242,58,245,cell_walkable,0;
	setcell "que_qsch03",58,242,58,245,cell_shootable,0;
	setcell "que_qsch03",72,286,72,289,cell_walkable,0;
	setcell "que_qsch03",72,286,72,289,cell_shootable,0;
	setcell "que_qsch03",68,254,68,259,cell_walkable,0;
	setcell "que_qsch03",68,254,68,259,cell_shootable,0;
	setcell "que_qsch03",73,260,73,263,cell_walkable,0;
	setcell "que_qsch03",73,260,73,263,cell_shootable,0;
	setcell "que_qsch03",75,248,75,251,cell_walkable,0;
	setcell "que_qsch03",75,248,75,251,cell_shootable,0;
	setcell "que_qsch03",79,280,79,283,cell_walkable,0;
	setcell "que_qsch03",79,280,79,283,cell_shootable,0;
	setcell "que_qsch03",82,271,85,271,cell_walkable,0;
	setcell "que_qsch03",82,271,85,271,cell_shootable,0;
	setcell "que_qsch03",89,292,89,295,cell_walkable,0;
	setcell "que_qsch03",89,292,89,295,cell_shootable,0;
	setcell "que_qsch03",88,276,91,276,cell_walkable,0;
	setcell "que_qsch03",88,276,91,276,cell_shootable,0;
	setcell "que_qsch03",88,266,91,266,cell_walkable,0;
	setcell "que_qsch03",88,266,91,266,cell_shootable,0;
	setcell "que_qsch03",94,256,97,256,cell_walkable,0;
	setcell "que_qsch03",94,256,97,256,cell_shootable,0;
	setcell "que_qsch03",64,298,64,301,cell_walkable,0;
	setcell "que_qsch03",64,298,64,301,cell_shootable,0;
	setcell "que_qsch03",000,251,003,251,cell_walkable,0;
	setcell "que_qsch03",000,251,003,251,cell_shootable,0;
	end;

OnDisable:
	killmonster "que_qsch03","#miro_bf_sch03::OnMyMobDead";
	setcell "que_qsch03",44,270,47,270,cell_walkable,1;
	setcell "que_qsch03",44,270,47,270,cell_shootable,1;
	setcell "que_qsch03",50,287,53,287,cell_walkable,1;
	setcell "que_qsch03",50,287,53,287,cell_shootable,1;
	setcell "que_qsch03",50,265,53,265,cell_walkable,1;
	setcell "que_qsch03",50,265,53,265,cell_shootable,1;
	setcell "que_qsch03",56,279,59,279,cell_walkable,1;
	setcell "que_qsch03",56,279,59,279,cell_shootable,1;
	setcell "que_qsch03",64,298,64,301,cell_walkable,1;
	setcell "que_qsch03",64,298,64,301,cell_shootable,1;
	setcell "que_qsch03",62,272,65,272,cell_walkable,1;
	setcell "que_qsch03",62,272,65,272,cell_shootable,1;
	setcell "que_qsch03",58,242,58,245,cell_walkable,1;
	setcell "que_qsch03",58,242,58,245,cell_shootable,1;
	setcell "que_qsch03",72,286,72,289,cell_walkable,1;
	setcell "que_qsch03",72,286,72,289,cell_shootable,1;
	setcell "que_qsch03",68,254,68,259,cell_walkable,1;
	setcell "que_qsch03",68,254,68,259,cell_shootable,1;
	setcell "que_qsch03",73,260,73,263,cell_walkable,1;
	setcell "que_qsch03",73,260,73,263,cell_shootable,1;
	setcell "que_qsch03",75,248,75,251,cell_walkable,1;
	setcell "que_qsch03",75,248,75,251,cell_shootable,1;
	setcell "que_qsch03",79,280,79,283,cell_walkable,1;
	setcell "que_qsch03",79,280,79,283,cell_shootable,1;
	setcell "que_qsch03",82,271,85,271,cell_walkable,1;
	setcell "que_qsch03",82,271,85,271,cell_shootable,1;
	setcell "que_qsch03",89,292,89,295,cell_walkable,1;
	setcell "que_qsch03",89,292,89,295,cell_shootable,1;
	setcell "que_qsch03",88,276,91,276,cell_walkable,1;
	setcell "que_qsch03",88,276,91,276,cell_shootable,1;
	setcell "que_qsch03",88,266,91,266,cell_walkable,1;
	setcell "que_qsch03",88,266,91,266,cell_shootable,1;
	setcell "que_qsch03",94,256,97,256,cell_walkable,1;
	setcell "que_qsch03",94,256,97,256,cell_shootable,1;
	setcell "que_qsch03",64,298,64,301,cell_walkable,1;
	setcell "que_qsch03",64,298,64,301,cell_shootable,1;
	setcell "que_qsch03",100,251,103,251,cell_walkable,1;
	setcell "que_qsch03",100,251,103,251,cell_shootable,1;
	end;

OnMyMobDead:
	end;
}

que_qsch03,2,2,0	script	#miro_rf_sch03	844,{

OnEnable:
	monster "que_qsch03",57,301," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",57,299," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",48,291," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",48,289," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",68,290," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",70,290," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",72,295," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",72,293," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",90,296," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",92,296," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",56,282," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",58,282," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",66,283," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",66,281," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",80,284," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",82,284," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",44,273," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",46,273," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",50,273," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",52,273," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",54,269," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",54,267," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",66,271," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",66,270," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",81,273," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",81,272," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",88,276," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",90,276," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",94,276," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",96,276," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",64,258," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",66,258," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",76,263," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",76,261," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",87,265," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",87,263," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",50,252," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",52,252," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",76,252," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",78,252," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",99,255," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",99,253," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",53,245," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	monster "que_qsch03",53,243," ",1935,1,"#miro_rf_sch03::OnMyMobDead";
	setcell "que_qsch03",57,298,57,301,cell_walkable,0;
	setcell "que_qsch03",57,298,57,301,cell_shootable,0;
	setcell "que_qsch03",48,288,48,291,cell_walkable,0;
	setcell "que_qsch03",48,288,48,291,cell_shootable,0;
	setcell "que_qsch03",68,290,71,290,cell_walkable,0;
	setcell "que_qsch03",68,290,71,290,cell_shootable,0;
	setcell "que_qsch03",72,292,72,295,cell_walkable,0;
	setcell "que_qsch03",72,292,72,295,cell_shootable,0;
	setcell "que_qsch03",90,296,93,296,cell_walkable,0;
	setcell "que_qsch03",90,296,93,296,cell_shootable,0;
	setcell "que_qsch03",56,282,59,282,cell_walkable,0;
	setcell "que_qsch03",56,282,59,282,cell_shootable,0;
	setcell "que_qsch03",66,280,66,283,cell_walkable,0;
	setcell "que_qsch03",66,280,66,283,cell_shootable,0;
	setcell "que_qsch03",80,284,83,284,cell_walkable,0;
	setcell "que_qsch03",80,284,83,284,cell_shootable,0;
	setcell "que_qsch03",44,273,47,273,cell_walkable,0;
	setcell "que_qsch03",44,273,47,273,cell_shootable,0;
	setcell "que_qsch03",50,273,53,273,cell_walkable,0;
	setcell "que_qsch03",50,273,53,273,cell_shootable,0;
	setcell "que_qsch03",54,266,54,269,cell_walkable,0;
	setcell "que_qsch03",54,266,54,269,cell_shootable,0;
	setcell "que_qsch03",66,270,66,271,cell_walkable,0;
	setcell "que_qsch03",66,270,66,271,cell_shootable,0;
	setcell "que_qsch03",81,272,81,273,cell_walkable,0;
	setcell "que_qsch03",81,272,81,273,cell_shootable,0;
	setcell "que_qsch03",88,276,91,276,cell_walkable,0;
	setcell "que_qsch03",88,276,91,276,cell_shootable,0;
	setcell "que_qsch03",94,276,97,276,cell_walkable,0;
	setcell "que_qsch03",94,276,97,276,cell_shootable,0;
	setcell "que_qsch03",64,258,67,258,cell_walkable,0;
	setcell "que_qsch03",64,258,67,258,cell_shootable,0;
	setcell "que_qsch03",76,260,76,263,cell_walkable,0;
	setcell "que_qsch03",76,260,76,263,cell_shootable,0;
	setcell "que_qsch03",87,262,87,265,cell_walkable,0;
	setcell "que_qsch03",87,262,87,265,cell_shootable,0;
	setcell "que_qsch03",50,252,53,252,cell_walkable,0;
	setcell "que_qsch03",50,252,53,252,cell_shootable,0;
	setcell "que_qsch03",76,252,79,252,cell_walkable,0;
	setcell "que_qsch03",76,252,79,252,cell_shootable,0;
	setcell "que_qsch03",99,252,99,255,cell_walkable,0;
	setcell "que_qsch03",99,252,99,255,cell_shootable,0;
	setcell "que_qsch03",53,242,53,245,cell_walkable,0;
	setcell "que_qsch03",53,242,53,245,cell_shootable,0;
	end;

OnDisable:
	killmonster "que_qsch03","#miro_rf_sch03::OnMyMobDead";
	setcell "que_qsch03",57,298,57,301,cell_walkable,1;
	setcell "que_qsch03",57,298,57,301,cell_shootable,1;
	setcell "que_qsch03",48,288,48,291,cell_walkable,1;
	setcell "que_qsch03",48,288,48,291,cell_shootable,1;
	setcell "que_qsch03",68,290,71,290,cell_walkable,1;
	setcell "que_qsch03",68,290,71,290,cell_shootable,1;
	setcell "que_qsch03",72,292,72,295,cell_walkable,1;
	setcell "que_qsch03",72,292,72,295,cell_shootable,1;
	setcell "que_qsch03",90,296,93,296,cell_walkable,1;
	setcell "que_qsch03",90,296,93,296,cell_shootable,1;
	setcell "que_qsch03",56,282,59,282,cell_walkable,1;
	setcell "que_qsch03",56,282,59,282,cell_shootable,1;
	setcell "que_qsch03",66,280,66,283,cell_walkable,1;
	setcell "que_qsch03",66,280,66,283,cell_shootable,1;
	setcell "que_qsch03",80,284,83,284,cell_walkable,1;
	setcell "que_qsch03",80,284,83,284,cell_shootable,1;
	setcell "que_qsch03",44,273,47,273,cell_walkable,1;
	setcell "que_qsch03",44,273,47,273,cell_shootable,1;
	setcell "que_qsch03",50,273,53,273,cell_walkable,1;
	setcell "que_qsch03",50,273,53,273,cell_shootable,1;
	setcell "que_qsch03",54,266,54,269,cell_walkable,1;
	setcell "que_qsch03",54,266,54,269,cell_shootable,1;
	setcell "que_qsch03",66,270,66,271,cell_walkable,1;
	setcell "que_qsch03",66,270,66,271,cell_shootable,1;
	setcell "que_qsch03",81,272,81,273,cell_walkable,1;
	setcell "que_qsch03",81,272,81,273,cell_shootable,1;
	setcell "que_qsch03",88,276,91,276,cell_walkable,1;
	setcell "que_qsch03",88,276,91,276,cell_shootable,1;
	setcell "que_qsch03",94,276,97,276,cell_walkable,1;
	setcell "que_qsch03",94,276,97,276,cell_shootable,1;
	setcell "que_qsch03",64,258,67,258,cell_walkable,1;
	setcell "que_qsch03",64,258,67,258,cell_shootable,1;
	setcell "que_qsch03",76,260,76,263,cell_walkable,1;
	setcell "que_qsch03",76,260,76,263,cell_shootable,1;
	setcell "que_qsch03",87,262,87,265,cell_walkable,1;
	setcell "que_qsch03",87,262,87,265,cell_shootable,1;
	setcell "que_qsch03",50,252,53,252,cell_walkable,1;
	setcell "que_qsch03",50,252,53,252,cell_shootable,1;
	setcell "que_qsch03",76,252,79,252,cell_walkable,1;
	setcell "que_qsch03",76,252,79,252,cell_shootable,1;
	setcell "que_qsch03",99,252,99,255,cell_walkable,1;
	setcell "que_qsch03",99,252,99,255,cell_shootable,1;
	setcell "que_qsch03",53,242,53,245,cell_walkable,1;
	setcell "que_qsch03",53,242,53,245,cell_shootable,1;
	end;

OnMyMobDead:
	end;
}

que_qsch03,2,3,0	script	#miro_yf_sch03	844,{

OnEnable:
	monster "que_qsch03",44,292," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",46,292," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",67,295," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",67,293," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",94,301," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",94,299," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",79,289," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",79,287," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",56,282," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",58,282," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",71,283," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",71,281," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",100,281," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",102,281," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",44,261," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",46,261," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",50,265," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",52,265," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",56,270," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",58,270," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",72,278," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",73,278," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",82,266," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",84,266," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",88,266," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",90,266," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",94,271," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",96,271," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",60,257," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",60,255," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",73,263," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",73,261," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",75,257," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",75,255," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",87,257," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",87,255," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",58,251," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",58,249," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",80,251," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",80,249," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",53,245," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",53,243," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",75,245," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",75,243," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",100,251," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",102,251," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",100,256," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	monster "que_qsch03",102,256," ",1936,1,"#miro_yf_sch03::OnMyMobDead";
	setcell "que_qsch03",44,292,47,292,cell_walkable,0;
	setcell "que_qsch03",44,292,47,292,cell_shootable,0;
	setcell "que_qsch03",67,292,67,295,cell_walkable,0;
	setcell "que_qsch03",67,292,67,295,cell_shootable,0;
	setcell "que_qsch03",94,298,94,301,cell_walkable,0;
	setcell "que_qsch03",94,298,94,301,cell_shootable,0;
	setcell "que_qsch03",79,286,79,289,cell_walkable,0;
	setcell "que_qsch03",79,286,79,289,cell_shootable,0;
	setcell "que_qsch03",56,282,59,282,cell_walkable,0;
	setcell "que_qsch03",56,282,59,282,cell_shootable,0;
	setcell "que_qsch03",71,280,71,283,cell_walkable,0;
	setcell "que_qsch03",71,280,71,283,cell_shootable,0;
	setcell "que_qsch03",100,281,103,281,cell_walkable,0;
	setcell "que_qsch03",100,281,103,281,cell_shootable,0;
	setcell "que_qsch03",44,261,47,261,cell_walkable,0;
	setcell "que_qsch03",44,261,47,261,cell_shootable,0;
	setcell "que_qsch03",50,265,53,265,cell_walkable,0;
	setcell "que_qsch03",50,265,53,265,cell_shootable,0;
	setcell "que_qsch03",56,270,59,270,cell_walkable,0;
	setcell "que_qsch03",56,270,59,270,cell_shootable,0;
	setcell "que_qsch03",72,278,73,278,cell_walkable,0;
	setcell "que_qsch03",72,278,73,278,cell_shootable,0;
	setcell "que_qsch03",82,266,85,266,cell_walkable,0;
	setcell "que_qsch03",82,266,85,266,cell_shootable,0;
	setcell "que_qsch03",88,266,91,266,cell_walkable,0;
	setcell "que_qsch03",88,266,91,266,cell_shootable,0;
	setcell "que_qsch03",94,271,97,271,cell_walkable,0;
	setcell "que_qsch03",94,271,97,271,cell_shootable,0;
	setcell "que_qsch03",60,254,60,257,cell_walkable,0;
	setcell "que_qsch03",60,254,60,257,cell_shootable,0;
	setcell "que_qsch03",73,260,73,263,cell_walkable,0;
	setcell "que_qsch03",73,260,73,263,cell_shootable,0;
	setcell "que_qsch03",75,254,75,257,cell_walkable,0;
	setcell "que_qsch03",75,254,75,257,cell_shootable,0;
	setcell "que_qsch03",87,254,87,257,cell_walkable,0;
	setcell "que_qsch03",87,254,87,257,cell_shootable,0;
	setcell "que_qsch03",58,248,58,251,cell_walkable,0;
	setcell "que_qsch03",58,248,58,251,cell_shootable,0;
	setcell "que_qsch03",80,248,80,251,cell_walkable,0;
	setcell "que_qsch03",80,248,80,251,cell_shootable,0;
	setcell "que_qsch03",53,242,53,245,cell_walkable,0;
	setcell "que_qsch03",53,242,53,245,cell_shootable,0;
	setcell "que_qsch03",75,242,75,245,cell_walkable,0;
	setcell "que_qsch03",75,242,75,245,cell_shootable,0;
	setcell "que_qsch03",100,251,103,251,cell_walkable,0;
	setcell "que_qsch03",100,251,103,251,cell_shootable,0;
	setcell "que_qsch03",100,256,103,256,cell_walkable,0;
	setcell "que_qsch03",100,256,103,256,cell_shootable,0;
	end;

OnDisable:
	killmonster "que_qsch03","#miro_yf_sch03::OnMyMobDead";
	setcell "que_qsch03",44,292,47,292,cell_walkable,1;
	setcell "que_qsch03",44,292,47,292,cell_shootable,1;
	setcell "que_qsch03",67,292,67,295,cell_walkable,1;
	setcell "que_qsch03",67,292,67,295,cell_shootable,1;
	setcell "que_qsch03",94,298,94,301,cell_walkable,1;
	setcell "que_qsch03",94,298,94,301,cell_shootable,1;
	setcell "que_qsch03",79,286,79,289,cell_walkable,1;
	setcell "que_qsch03",79,286,79,289,cell_shootable,1;
	setcell "que_qsch03",56,282,59,282,cell_walkable,1;
	setcell "que_qsch03",56,282,59,282,cell_shootable,1;
	setcell "que_qsch03",71,280,71,283,cell_walkable,1;
	setcell "que_qsch03",71,280,71,283,cell_shootable,1;
	setcell "que_qsch03",100,281,103,281,cell_walkable,1;
	setcell "que_qsch03",100,281,103,281,cell_shootable,1;
	setcell "que_qsch03",44,261,47,261,cell_walkable,1;
	setcell "que_qsch03",44,261,47,261,cell_shootable,1;
	setcell "que_qsch03",50,265,53,265,cell_walkable,1;
	setcell "que_qsch03",50,265,53,265,cell_shootable,1;
	setcell "que_qsch03",56,270,59,270,cell_walkable,1;
	setcell "que_qsch03",56,270,59,270,cell_shootable,1;
	setcell "que_qsch03",72,278,73,278,cell_walkable,1;
	setcell "que_qsch03",72,278,73,278,cell_shootable,1;
	setcell "que_qsch03",82,266,85,266,cell_walkable,1;
	setcell "que_qsch03",82,266,85,266,cell_shootable,1;
	setcell "que_qsch03",88,266,91,266,cell_walkable,1;
	setcell "que_qsch03",88,266,91,266,cell_shootable,1;
	setcell "que_qsch03",94,271,97,271,cell_walkable,1;
	setcell "que_qsch03",94,271,97,271,cell_shootable,1;
	setcell "que_qsch03",60,254,60,257,cell_walkable,1;
	setcell "que_qsch03",60,254,60,257,cell_shootable,1;
	setcell "que_qsch03",73,260,73,263,cell_walkable,1;
	setcell "que_qsch03",73,260,73,263,cell_shootable,1;
	setcell "que_qsch03",75,254,75,257,cell_walkable,1;
	setcell "que_qsch03",75,254,75,257,cell_shootable,1;
	setcell "que_qsch03",87,254,87,257,cell_walkable,1;
	setcell "que_qsch03",87,254,87,257,cell_shootable,1;
	setcell "que_qsch03",58,248,58,251,cell_walkable,1;
	setcell "que_qsch03",58,248,58,251,cell_shootable,1;
	setcell "que_qsch03",80,248,80,251,cell_walkable,1;
	setcell "que_qsch03",80,248,80,251,cell_shootable,1;
	setcell "que_qsch03",53,242,53,245,cell_walkable,1;
	setcell "que_qsch03",53,242,53,245,cell_shootable,1;
	setcell "que_qsch03",75,242,75,245,cell_walkable,1;
	setcell "que_qsch03",75,242,75,245,cell_shootable,1;
	setcell "que_qsch03",100,251,103,251,cell_walkable,1;
	setcell "que_qsch03",100,251,103,251,cell_shootable,1;
	setcell "que_qsch03",100,256,103,256,cell_walkable,1;
	setcell "que_qsch03",100,256,103,256,cell_shootable,1;
	end;

OnMyMobDead:
	end;
}

que_qsch03,132,172,0	script	windpath01_sch03	45,1,1,{
OnTouch:
	if (countitem(7839) > 0) {
		mes "La Clé de Cristal réagit au Portail.";
		delitem 7839,1; //Crystal_Key
		close2;
		warp "que_qsch03",114,158;
		end;
	}
	else {
		mes "Il vous faut une Clé de Cristal pour ouvrir ce Portail.";
		close;
	}
}

que_qsch03,113,165,0	warp	windpath02_sch03	1,1,que_qsch03,139,172


que_qsch03,131,136,3	script	Piamette#sch03	1930,{
OnInit:
	enablenpc "Piamette#sch03";
	end;
}

que_qsch03,114,158,0	script	#event_start01_sch03	-1,1,1,{

OnInit:
	disablenpc "#event_start01_sch03";
	end;

OnEnable:
	enablenpc "#event_start01_sch03";
	end;

OnDisable:
	disablenpc "#event_start01_sch03";
	stopnpctimer;
	end;

OnTouch:
	initnpctimer;
	disablenpc "#event_start01_sch03";
	end;

OnTimer2000:
	mapannounce "que_qsch03","Piamette marmonne : ... Il y avait six oiseaux, Téo. Mais il y en a un qui...",bc_map,"0xdb7093";
	end;

OnTimer6000:
	mapannounce "que_qsch03","Piamette marmonne : ...Shh.. Téo. Les oiseaux sont tous revenus... Y a-t-il déjà eu des oiseux qui se soient enfuis...? Ou bien est-ce à cause de ces casseurs déguisés en aventuriers?",bc_map,"0xdb7093";
	end;

OnTimer10000:
	mapannounce "que_qsch03","Piamette marmonne : Ah! Ils sont en cage.",bc_map,"0xdb7093";
	end;

OnTimer14000:
	mapannounce "que_qsch03","Piamette : Téo, attrape ces oiseaux! Mets la cage ailleurs!",bc_map,"0x00ff00";
	donpcevent "#gdtimer01_sch03::OnEnable";
	stopnpctimer;
	end;
}

que_qsch03,2,2,0	script	#gdtimer01_sch03	844,{

OnEnable:
	initnpctimer;
	end;

Onstop:
	donpcevent "#getspell01_sch03::OnDisable";
	donpcevent "#getspell02_sch03::OnDisable";
	donpcevent "#getspell03_sch03::OnDisable";
	donpcevent "#getspell04_sch03::OnDisable";
	donpcevent "#getspell05_sch03::OnDisable";
	donpcevent "#getspell06_sch03::OnDisable";
	donpcevent "#getspell07_sch03::OnDisable";
	donpcevent "#getspell08_sch03::OnDisable";
	stopnpctimer;
	end;

OnTimer1000:
	donpcevent "#getspell08_sch03::OnDisable";
	donpcevent "#getspell01_sch03::OnEnable";
	end;

OnTimer10000:
	donpcevent "#getspell01_sch03::OnDisable";
	donpcevent "#getspell02_sch03::OnEnable";
	end;

OnTimer20000:
	donpcevent "#getspell02_sch03::OnDisable";
	donpcevent "#getspell03_sch03::OnEnable";
	end;

OnTimer30000:
	donpcevent "#getspell03_sch03::OnDisable";
	donpcevent "#getspell04_sch03::OnEnable";
	end;

OnTimer40000:
	donpcevent "#getspell04_sch03::OnDisable";
	donpcevent "#getspell05_sch03::OnEnable";
	end;

OnTimer50000:
	donpcevent "#getspell05_sch03::OnDisable";
	donpcevent "#getspell06_sch03::OnEnable";
	end;

OnTimer60000:
	donpcevent "#getspell06_sch03::OnDisable";
	donpcevent "#getspell07_sch03::OnEnable";
	end;

OnTimer70000:
	donpcevent "#getspell07_sch03::OnDisable";
	donpcevent "#getspell08_sch03::OnEnable";
	end;

OnTimer75000:
	if ($gqse_sch03_gd < 6) {
		mapannounce "que_qsch03","Piamette : Stupides oiseaux! Stupides Téo! Pourquoi tu ne les mets pas en cage maintenant?!",bc_map,"0x00ff00";
		enablenpc "#sch03_cage01";
		enablenpc "#sch03_cage02";
		enablenpc "#sch03_cage03";
		enablenpc "#sch03_cage04";
		enablenpc "#sch03_cage05";
		enablenpc "#sch03_cage06";
		set $gqse_sch03_gd,0;
	}
	end;

OnTimer76000:
	disablenpc "#sch03_cage01";
	disablenpc "#sch03_cage02";
	disablenpc "#sch03_cage03";
	disablenpc "#sch03_cage04";
	disablenpc "#sch03_cage05";
	disablenpc "#sch03_cage06";
	end;

OnTimer80000:
	donpcevent "#gdtimer01_sch03::OnEnable";
	end;
}

que_qsch03,2,3,0	script	#gdtimer02_sch03	844,{

OnEnable:
	initnpctimer;
	end;

Onstop:
	stopnpctimer;
	killmonster "que_qsch03","#gdtimer02_sch03::OnMyMobDead";
	end;

OnTimer4000:
	mapannounce "que_qsch03","Piamette : On les a tous attrapés!",bc_map,"0xdb7093";
	end;

OnTimer8000:
	mapannounce "que_qsch03","Piamette : Appelons le Gardien des Clés pour que les oiseaux ne s'enfuient pas trop loin.",bc_map,"0xdb7093";
	end;

OnTimer12000:
	mapannounce "que_qsch03","Piamette : Ouiii! Le Gardien des Clés surveille ma cage!",bc_map,"0xdb7093";
	monster "que_qsch03",108,151,"Pierre des Clés",1905,1,"#gdtimer02_sch03::OnMyMobDead";
	monster "que_qsch03",109,135,"Pierre des Clés",1905,1,"#gdtimer02_sch03::OnMyMobDead";
	monster "que_qsch03",115,116,"Pierre des Clés",1905,1,"#gdtimer02_sch03::OnMyMobDead";
	monster "que_qsch03",158,106,"Pierre des Clés",1905,1,"#gdtimer02_sch03::OnMyMobDead";
	monster "que_qsch03",163,133,"Pierre des Clés",1905,1,"#gdtimer02_sch03::OnMyMobDead";
	monster "que_qsch03",150,154,"Pierre des Clés",1905,1,"#gdtimer02_sch03::OnMyMobDead";
	end;

OnTimer112000:
	mapannounce "que_qsch03","Piamette : Ouiii!!! On va encore s'amuser! Partez maintenant! Je vous rattrape!",bc_map,"0xdb7093";
	killmonster "que_qsch03","#gdtimer02_sch03::OnMyMobDead";
	enablenpc "#sch03_cage01";
	enablenpc "#sch03_cage02";
	enablenpc "#sch03_cage03";
	enablenpc "#sch03_cage04";
	enablenpc "#sch03_cage05";
	enablenpc "#sch03_cage06";
	set $gqse_sch03_gd,0;
	end;

OnTimer113000:
	disablenpc "#sch03_cage01";
	disablenpc "#sch03_cage02";
	disablenpc "#sch03_cage03";
	disablenpc "#sch03_cage04";
	disablenpc "#sch03_cage05";
	disablenpc "#sch03_cage06";
	donpcevent "#gdtimer01_sch03::OnEnable";
	stopnpctimer;
	end;

Onreset:
	killmonster "que_qsch03","#gdtimer02_sch03::OnMyMobDead";
	end;

OnMyMobDead:
	if (mobcount("que_qsch03","#gdtimer02_sch03::OnMyMobDead") == 0) {
		enablenpc "#sch03_cage01";
		enablenpc "#sch03_cage02";
		enablenpc "#sch03_cage03";
		enablenpc "#sch03_cage04";
		enablenpc "#sch03_cage05";
		enablenpc "#sch03_cage06";
		donpcevent "#piamette_sch03::OnEnable";
		stopnpctimer;
	}
	end;
}

que_qsch03,1,4,0	script	#piamette_sch03	844,{
OnEnable:
	initnpctimer;
	end;

Onreset:
	killmonster "que_qsch03","#piamette_sch03::OnMyMobDead";
	stopnpctimer;
	end;

OnTimer1000:
	mapannounce "que_qsch03","Piamette : Tous les Gardiens des Clés sont morts maintenant? Qui a libéré moi oiseaux? Hein? Téo, qui a fait ça?",bc_map,"0xdb7093";
	end;

OnTimer5000:
	mapannounce "que_qsch03","Piamette : Je vais m'énerver maintenant!",bc_map,"0xdb7093";
	disablenpc "Piamette#sch03";
	monster "que_qsch03",131,135,"Piamette en Colère",1930,1,"#piamette_sch03::OnMyMobDead";
	stopnpctimer;
	end;

OnMyMobDead:
	mapannounce "que_qsch03","Piamette a été repoussée. Le Portail Sud vient de s'ouvrir.",bc_map,"0x00ff00";
	enablenpc "windpath03_sch03";
	enablenpc "windpath04_sch03";
	donpcevent "#nm_switch_sch03::OnEnable";
	end;
}

que_qsch03,113,135,0	script	#getspell01_sch03	-1,1,1,{
OnInit:
	disablenpc "#getspell01_sch03";
	end;

OnEnable:
	enablenpc "#getspell01_sch03";
	specialeffect EF_LOCKON;
	end;

OnDisable:
	disablenpc "#getspell01_sch03";
	end;

OnTouch:
	sc_start2 SC_Stone,300000,0,10000;
	if ($gqse_sch03_gd == 0) {
		warp "que_qsch03",103,153;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,1;
		mapannounce "que_qsch03","Piamette : Un petit oiseau vient de tomber, une flèche dans l'aile.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 1) {
		warp "que_qsch03",102,135;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,2;
		mapannounce "que_qsch03","Piamette : Un petit oiseau est tombé dans un piège, et coule au fond du lac.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 2) {
		warp "que_qsch03",113,111;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,3;
		mapannounce "que_qsch03","Piamette : Un petit oiseau vient de mourir dans sa cage.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 3) {
		warp "que_qsch03",161,105;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,4;
		mapannounce "que_qsch03","Piamette : Un petit oiseau vient de mourir empoisonné.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 4) {
		warp "que_qsch03",168,135;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,5;
		mapannounce "que_qsch03","Piamette : Un petit oiseau a vomi du sang pendant sept jours et sept nuits en chantant.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 5) {
		warp "que_qsch03",150,159;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,6;
		mapannounce "que_qsch03","Piamette : Le dernier petit oiseau vient de se briser le cou en se tortillant pour sortir de son oeuf!",bc_map,"0xFF0000";
		donpcevent "#gdtimer02_sch03::OnEnable";
		donpcevent "#gdtimer01_sch03::Onstop";
	}
	end;
}

que_qsch03,146,150,0	script	#getspell02_sch03	-1,1,1,{
OnInit:
	disablenpc "#getspell02_sch03";
	end;

OnEnable:
	enablenpc "#getspell02_sch03";
	specialeffect EF_LOCKON;
	end;

OnDisable:
	disablenpc "#getspell02_sch03";
	end;

OnTouch:
	sc_start2 SC_Stone,300000,0,10000;
	if ($gqse_sch03_gd == 0) {
		warp "que_qsch03",103,153;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,1;
		mapannounce "que_qsch03","Piamette : Un petit oiseau vient de tomber, une flèche dans l'aile.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 1) {
		warp "que_qsch03",102,135;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,2;
		mapannounce "que_qsch03","Piamette : Un petit oiseau est tombé dans un piège, et coule au fond du lac.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 2) {
		warp "que_qsch03",113,111;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,3;
		mapannounce "que_qsch03","Piamette : Un petit oiseau vient de mourir dans sa cage.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 3) {
		warp "que_qsch03",161,105;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,4;
		mapannounce "que_qsch03","Piamette : Un petit oiseau vient de mourir empoisonné.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 4) {
		warp "que_qsch03",168,135;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,5;
		mapannounce "que_qsch03","Piamette : Un petit oiseau a vomi du sang pendant sept jours et sept nuits en chantant.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 5) {
		warp "que_qsch03",150,159;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,6;
		mapannounce "que_qsch03","Piamette : Le dernier petit oiseau vient de se briser le cou en se tortillant pour sortir de son oeuf!",bc_map,"0xFF0000";
		donpcevent "#gdtimer02_sch03::OnEnable";
		donpcevent "#gdtimer01_sch03::Onstop";
	}
	end;
}

que_qsch03,131,117,0	script	#getspell03_sch03	-1,1,1,{
OnInit:
	disablenpc "#getspell03_sch03";
	end;

OnEnable:
	enablenpc "#getspell03_sch03";
	specialeffect EF_LOCKON;
	end;

OnDisable:
	disablenpc "#getspell03_sch03";
	end;

OnTouch:
	sc_start2 SC_Stone,300000,0,10000;
	if ($gqse_sch03_gd == 0) {
		warp "que_qsch03",103,153;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,1;
		mapannounce "que_qsch03","Piamette : Un petit oiseau vient de tomber, une flèche dans l'aile.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 1) {
		warp "que_qsch03",102,135;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,2;
		mapannounce "que_qsch03","Piamette : Un petit oiseau est tombé dans un piège, et coule au fond du lac.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 2) {
		warp "que_qsch03",113,111;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,3;
		mapannounce "que_qsch03","Piamette : Un petit oiseau vient de mourir dans sa cage.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 3) {
		warp "que_qsch03",161,105;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,4;
		mapannounce "que_qsch03","Piamette : Un petit oiseau vient de mourir empoisonné.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 4) {
		warp "que_qsch03",168,135;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,5;
		mapannounce "que_qsch03","Piamette : Un petit oiseau a vomi du sang pendant sept jours et sept nuits en chantant.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 5) {
		warp "que_qsch03",150,159;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,6;
		mapannounce "que_qsch03","Piamette : Le dernier petit oiseau vient de se briser le cou en se tortillant pour sortir de son oeuf!",bc_map,"0xFF0000";
		donpcevent "#gdtimer02_sch03::OnEnable";
		donpcevent "#gdtimer01_sch03::Onstop";
	}
	end;
}

que_qsch03,117,150,0	script	#getspell04_sch03	-1,1,1,{
OnInit:
	disablenpc "#getspell04_sch03";
	end;

OnEnable:
	enablenpc "#getspell04_sch03";
	specialeffect EF_LOCKON;
	end;

OnDisable:
	disablenpc "#getspell04_sch03";
	end;

OnTouch:
	sc_start2 SC_Stone,300000,0,10000;
	if ($gqse_sch03_gd == 0) {
		warp "que_qsch03",103,153;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,1;
		mapannounce "que_qsch03","Piamette : Un petit oiseau vient de tomber, une flèche dans l'aile.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 1) {
		warp "que_qsch03",102,135;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,2;
		mapannounce "que_qsch03","Piamette : Un petit oiseau est tombé dans un piège, et coule au fond du lac.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 2) {
		warp "que_qsch03",113,111;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,3;
		mapannounce "que_qsch03","Piamette : Un petit oiseau vient de mourir dans sa cage.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 3) {
		warp "que_qsch03",161,105;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,4;
		mapannounce "que_qsch03","Piamette : Un petit oiseau vient de mourir empoisonné.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 4) {
		warp "que_qsch03",168,135;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,5;
		mapannounce "que_qsch03","Piamette : Un petit oiseau a vomi du sang pendant sept jours et sept nuits en chantant.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 5) {
		warp "que_qsch03",150,159;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,6;
		mapannounce "que_qsch03","Piamette : Le dernier petit oiseau vient de se briser le cou en se tortillant pour sortir de son oeuf!",bc_map,"0xFF0000";
		donpcevent "#gdtimer02_sch03::OnEnable";
		donpcevent "#gdtimer01_sch03::Onstop";
	}
	end;
}

que_qsch03,150,135,0	script	#getspell05_sch03	-1,1,1,{
OnInit:
	disablenpc "#getspell05_sch03";
	end;

OnEnable:
	enablenpc "#getspell05_sch03";
	specialeffect EF_LOCKON;
	end;

OnDisable:
	disablenpc "#getspell05_sch03";
	end;

OnTouch:
	sc_start2 SC_Stone,300000,0,10000;
	if ($gqse_sch03_gd == 0) {
		warp "que_qsch03",103,153;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,1;
		mapannounce "que_qsch03","Piamette : Un petit oiseau vient de tomber, une flèche dans l'aile.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 1) {
		warp "que_qsch03",102,135;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,2;
		mapannounce "que_qsch03","Piamette : Un petit oiseau est tombé dans un piège, et coule au fond du lac.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 2) {
		warp "que_qsch03",113,111;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,3;
		mapannounce "que_qsch03","Piamette : Un petit oiseau vient de mourir dans sa cage.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 3) {
		warp "que_qsch03",161,105;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,4;
		mapannounce "que_qsch03","Piamette : Un petit oiseau vient de mourir empoisonné.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 4) {
		warp "que_qsch03",168,135;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,5;
		mapannounce "que_qsch03","Piamette : Un petit oiseau a vomi du sang pendant sept jours et sept nuits en chantant.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 5) {
		warp "que_qsch03",150,159;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,6;
		mapannounce "que_qsch03","Piamette : Le dernier petit oiseau vient de se briser le cou en se tortillant pour sortir de son oeuf!",bc_map,"0xFF0000";
		donpcevent "#gdtimer02_sch03::OnEnable";
		donpcevent "#gdtimer01_sch03::Onstop";
	}
	end;
}

que_qsch03,117,121,0	script	#getspell06_sch03	-1,1,1,{
OnInit:
	disablenpc "#getspell06_sch03";
	end;

OnEnable:
	enablenpc "#getspell06_sch03";
	specialeffect EF_LOCKON;
	end;

OnDisable:
	disablenpc "#getspell06_sch03";
	end;

OnTouch:
	sc_start2 SC_Stone,300000,0,10000;
	if ($gqse_sch03_gd == 0) {
		warp "que_qsch03",103,153;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,1;
		mapannounce "que_qsch03","Piamette : Un petit oiseau vient de tomber, une flèche dans l'aile.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 1) {
		warp "que_qsch03",102,135;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,2;
		mapannounce "que_qsch03","Piamette : Un petit oiseau est tombé dans un piège, et coule au fond du lac.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 2) {
		warp "que_qsch03",113,111;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,3;
		mapannounce "que_qsch03","Piamette : Un petit oiseau vient de mourir dans sa cage.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 3) {
		warp "que_qsch03",161,105;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,4;
		mapannounce "que_qsch03","Piamette : Un petit oiseau vient de mourir empoisonné.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 4) {
		warp "que_qsch03",168,135;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,5;
		mapannounce "que_qsch03","Piamette : Un petit oiseau a vomi du sang pendant sept jours et sept nuits en chantant.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 5) {
		warp "que_qsch03",150,159;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,6;
		mapannounce "que_qsch03","Piamette : Le dernier petit oiseau vient de se briser le cou en se tortillant pour sortir de son oeuf!",bc_map,"0xFF0000";
		donpcevent "#gdtimer02_sch03::OnEnable";
		donpcevent "#gdtimer01_sch03::Onstop";
	}
	end;
}

que_qsch03,131,154,0	script	#getspell07_sch03	-1,1,1,{
OnInit:
	disablenpc "#getspell07_sch03";
	end;

OnEnable:
	enablenpc "#getspell07_sch03";
	specialeffect EF_LOCKON;
	end;

OnDisable:
	disablenpc "#getspell07_sch03";
	end;

OnTouch:
	sc_start2 SC_Stone,300000,0,10000;
	if ($gqse_sch03_gd == 0) {
		warp "que_qsch03",103,153;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,1;
		mapannounce "que_qsch03","Piamette : Un petit oiseau vient de tomber, une flèche dans l'aile.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 1) {
		warp "que_qsch03",102,135;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,2;
		mapannounce "que_qsch03","Piamette : Un petit oiseau est tombé dans un piège, et coule au fond du lac.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 2) {
		warp "que_qsch03",113,111;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,3;
		mapannounce "que_qsch03","Piamette : Un petit oiseau vient de mourir dans sa cage.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 3) {
		warp "que_qsch03",161,105;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,4;
		mapannounce "que_qsch03","Piamette : Un petit oiseau vient de mourir empoisonné.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 4) {
		warp "que_qsch03",168,135;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,5;
		mapannounce "que_qsch03","Piamette : Un petit oiseau a vomi du sang pendant sept jours et sept nuits en chantant.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 5) {
		warp "que_qsch03",150,159;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,6;
		mapannounce "que_qsch03","Piamette : Le dernier petit oiseau vient de se briser le cou en se tortillant pour sortir de son oeuf!",bc_map,"0xFF0000";
		donpcevent "#gdtimer02_sch03::OnEnable";
		donpcevent "#gdtimer01_sch03::Onstop";
	}
	end;
}

que_qsch03,146,121,0	script	#getspell08_sch03	-1,1,1,{
OnInit:
	disablenpc "#getspell08_sch03";
	end;

OnEnable:
	enablenpc "#getspell08_sch03";
	specialeffect EF_LOCKON;
	end;

OnDisable:
	disablenpc "#getspell08_sch03";
	end;

OnTouch:
	sc_start2 SC_Stone,300000,0,10000;
	if ($gqse_sch03_gd == 0) {
		warp "que_qsch03",103,153;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,1;
		mapannounce "que_qsch03","Piamette : Un petit oiseau vient de tomber, une flèche dans l'aile.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 1) {
		warp "que_qsch03",102,135;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,2;
		mapannounce "que_qsch03","Piamette : Un petit oiseau est tombé dans un piège, et coule au fond du lac.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 2) {
		warp "que_qsch03",113,111;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,3;
		mapannounce "que_qsch03","Piamette : Un petit oiseau vient de mourir dans sa cage.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 3) {
		warp "que_qsch03",161,105;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,4;
		mapannounce "que_qsch03","Piamette : Un petit oiseau vient de mourir empoisonné.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 4) {
		warp "que_qsch03",168,135;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,5;
		mapannounce "que_qsch03","Piamette : Un petit oiseau a vomi du sang pendant sept jours et sept nuits en chantant.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch03_gd == 5) {
		warp "que_qsch03",150,159;
		disablenpc "#getspell01_sch03";
		set $gqse_sch03_gd,6;
		mapannounce "que_qsch03","Piamette : Le dernier petit oiseau vient de se briser le cou en se tortillant pour sortir de son oeuf!",bc_map,"0xFF0000";
		donpcevent "#gdtimer02_sch03::OnEnable";
		donpcevent "#gdtimer01_sch03::Onstop";
	}
	end;
}

que_qsch03,103,153,0	script	#sch03_cage01	-1,1,1,{
OnInit:
	disablenpc "#sch03_cage01";
	end;

OnTouch:
	sc_end SC_Stone;
	warp "que_qsch03",108,151;
	disablenpc "#sch03_cage01";
	end;
}

que_qsch03,102,135,0	script	#sch03_cage02	-1,1,1,{
OnInit:
	disablenpc "#sch03_cage02";
	end;

OnTouch:
	sc_end SC_Stone;
	warp "que_qsch03",107,135;
	disablenpc "#sch03_cage02";
	end;
}

que_qsch03,113,111,0	script	#sch03_cage03	-1,1,1,{
OnInit:
	disablenpc "#sch03_cage03";
	end;

OnTouch:
	sc_end SC_Stone;
	warp "que_qsch03",113,114;
	disablenpc "#sch03_cage03";
	end;
}

que_qsch03,161,105,0	script	#sch03_cage04	-1,1,1,{
OnInit:
	disablenpc "#sch03_cage04";
	end;

OnTouch:
	sc_end SC_Stone;
	warp "que_qsch03",158,106;
	disablenpc "#sch03_cage04";
	end;
}

que_qsch03,168,135,0	script	#sch03_cage05	-1,1,1,{
OnInit:
	disablenpc "#sch03_cage05";
	end;

OnTouch:
	sc_end SC_Stone;
	warp "que_qsch03",163,133;
	disablenpc "#sch03_cage05";
	end;
}

que_qsch03,150,159,0	script	#sch03_cage06	-1,1,1,{
OnInit:
	disablenpc "#sch03_cage06";
	end;

OnTouch:
	sc_end SC_Stone;
	warp "que_qsch03",150,154;
	disablenpc "#sch03_cage06";
	end;
}

que_qsch03,1,8,0	script	#gd_sch03_mobctrl	844,{
OnEnable:
	monster "que_qsch03",107,152,"Balle de Piamette",1738,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",109,135,"Balle de Piamette",1738,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",113,116,"Balle de Piamette",1738,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",157,107,"Balle de Piamette",1738,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",163,133,"Balle de Piamette",1738,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",149,156,"Balle de Piamette",1738,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",130,139,"--ja--",1275,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",135,137,"--ja--",1275,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",130,132,"--ja--",1275,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",128,137,"--ja--",1275,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",109,145,"--ja--",1275,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",109,130,"--ja--",1275,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",128,114,"--ja--",1275,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",147,114,"--ja--",1275,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",154,128,"--ja--",1275,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",151,145,"--ja--",1275,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",130,151,"--ja--",1275,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",131,139,"Balle de Piamette",1738,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",135,136,"Balle de Piamette",1738,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",131,132,"Balle de Piamette",1738,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",128,136,"Balle de Piamette",1738,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",110,145,"Balle de Piamette",1738,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",129,114,"Balle de Piamette",1738,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",148,114,"Balle de Piamette",1738,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",155,128,"Balle de Piamette",1738,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",152,145,"Balle de Piamette",1738,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",131,151,"Balle de Piamette",1738,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",110,130,"Balle de Piamette",1738,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",132,139,"--ja--",1390,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",135,135,"--ja--",1390,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",132,132,"--ja--",1390,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",128,135,"--ja--",1390,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",111,145,"--ja--",1390,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",111,130,"--ja--",1390,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",130,114,"--ja--",1390,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",149,114,"--ja--",1390,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",156,128,"--ja--",1390,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",153,145,"--ja--",1390,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",132,151,"--ja--",1390,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",133,139,"--ja--",1699,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",135,134,"--ja--",1699,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",133,132,"--ja--",1699,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",128,135,"--ja--",1699,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",112,145,"--ja--",1699,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",131,114,"--ja--",1699,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",150,114,"--ja--",1699,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",157,128,"--ja--",1699,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",154,145,"--ja--",1699,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",133,151,"--ja--",1699,1,"#gd_sch03_mobctrl::OnMyMobDead";
	monster "que_qsch03",112,130,"--ja--",1699,1,"#gd_sch03_mobctrl::OnMyMobDead";
	end;

Onreset:
	killmonster "que_qsch03","#gd_sch03_mobctrl::OnMyMobDead";
	end;

OnMyMobDead:
	if (mobcount("que_qsch03","#gd_sch03_mobctrl::OnMyMobDead") < 7) {
		monster "que_qsch03",107,152,"Balle de Piamette",1738,1,"#gd_sch03_mobctrl::OnMyMobDead";
		monster "que_qsch03",109,135,"Balle de Piamette",1738,1,"#gd_sch03_mobctrl::OnMyMobDead";
		monster "que_qsch03",113,116,"Balle de Piamette",1738,1,"#gd_sch03_mobctrl::OnMyMobDead";
		monster "que_qsch03",157,107,"Balle de Piamette",1738,1,"#gd_sch03_mobctrl::OnMyMobDead";
		monster "que_qsch03",163,133,"Balle de Piamette",1738,1,"#gd_sch03_mobctrl::OnMyMobDead";
		monster "que_qsch03",149,156,"Balle de Piamette",1738,1,"#gd_sch03_mobctrl::OnMyMobDead";
	}
	end;
}

que_qsch03,149,105,0	script	windpath03_sch03	45,1,1,{
OnInit:
	disablenpc "windpath03_sch03";
	end;

OnTouch:
	warp "que_qsch03",119,103;
	end;
}

que_qsch03,128,104,0	script	windpath04_sch03	45,1,1,{
OnInit:
	disablenpc "windpath04_sch03";
	end;

OnTouch:
	warp "que_qsch03",146,109;
	end;
}

que_qsch03,253,273,0	script	#nm_switch_sch03	-1,5,5,{
OnInit:
	disablenpc "#nm_switch_sch03";
	end;

OnEnable:
	enablenpc "#nm_switch_sch03";
	end;

OnDisable:
	disablenpc "#nm_switch_sch03";
	stopnpctimer;
	end;

OnTouch:
	disablenpc "#nm_switch_sch03";
	initnpctimer;
	end;

OnTimer1000:
	mapannounce "que_qsch03","Dame aux Souhaits: Avez-vous passé du bon temps avec Piamette?",bc_map,"0x00ff00";
	end;

OnTimer4000:
	mapannounce "que_qsch03","Dame aux Souhaits: Mais c'est terminé! Des créatures vont être bientôt invoquées...",bc_map,"0x00ff00";
	end;

OnTimer9000:
	mapannounce "que_qsch03","Dame aux Souhaits: Venez jusqu'à moi...",bc_map,"0x00ff00";
	end;

OnTimer10000:
	donpcevent "#nmsomsch03_jin01::OnEnable";
	donpcevent "#sch03_stone01::OnEnable";
	end;

OnTimer190000:
	donpcevent "#nmsomsch03_jin02::OnEnable";
	donpcevent "#sch03_stone02::OnEnable";
	end;

OnTimer370000:
	donpcevent "#nmsomsch03_jin03::OnEnable";
	donpcevent "#sch03_stone03::OnEnable";
	stopnpctimer;
	end;
}

que_qsch03,229,297,0	script	#nmsomsch03_jin01	-1,{
OnEnable:
	donpcevent "#sch03_stone01::OnEnable";
	initnpctimer;
	end;

OnDisable:
	killmonster "que_qsch03","#nmsomsch03_jin01::OnMyMobDead";
	stopnpctimer;
	end;

OnTimer5000:
	mapannounce "que_qsch03","L'Assemblée des Mages de l'Ouest invoque des Gardiens des Ombres.",bc_map,"0x4d4dff";
	monster "que_qsch03",226,288,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",227,289,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",228,290,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",229,291,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",230,292,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",231,293,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",232,294,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",233,295,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",234,296,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",235,297,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",228,286,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",229,287,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",230,288,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",231,289,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",232,290,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",233,291,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",234,292,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",235,293,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",236,294,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",237,295,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",230,284,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",231,285,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",232,286,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",233,287,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",234,288,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",235,289,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",236,290,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",237,291,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",238,292,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",239,293,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	end;

OnTimer25000:
OnTimer55000:
OnTimer85000:
OnTimer120000:
	monster "que_qsch03",226,294,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",227,294,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",228,294,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",229,294,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",230,295,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",231,296,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",231,297,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",231,298,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",231,299,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",230,300,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",229,301,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",228,301,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",227,301,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",226,301,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",225,300,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",224,299,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",224,298,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",224,297,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",224,296,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	monster "que_qsch03",225,295,"Gardien des Ombres",1752,1,"#nmsomsch03_jin01::OnMyMobDead";
	end;

OnTimer180000:
	stopnpctimer;
	end;

OnMyMobDead:
	end;
}

que_qsch03,2,8,0	script	#sch03_stone01	844,{
OnEnable:
	monster "que_qsch03",227,294,"Gardien de la Magie",1752,1,"#sch03_stone01::OnMyMobDead";
	monster "que_qsch03",229,294,"Gardien de la Magie",1752,1,"#sch03_stone01::OnMyMobDead";
	monster "que_qsch03",231,296,"Gardien de la Magie",1752,1,"#sch03_stone01::OnMyMobDead";
	monster "que_qsch03",231,298,"Gardien de la Magie",1752,1,"#sch03_stone01::OnMyMobDead";
	monster "que_qsch03",230,300,"Gardien de la Magie",1752,1,"#sch03_stone01::OnMyMobDead";
	monster "que_qsch03",228,301,"Gardien de la Magie",1752,1,"#sch03_stone01::OnMyMobDead";
	monster "que_qsch03",226,301,"Gardien de la Magie",1752,1,"#sch03_stone01::OnMyMobDead";
	monster "que_qsch03",224,299,"Gardien de la Magie",1752,1,"#sch03_stone01::OnMyMobDead";
	monster "que_qsch03",224,297,"Gardien de la Magie",1752,1,"#sch03_stone01::OnMyMobDead";
	monster "que_qsch03",225,295,"Gardien de la Magie",1752,1,"#sch03_stone01::OnMyMobDead";
	end;

Onreset:
	killmonster "que_qsch03","#sch03_stone01::OnMyMobDead";
	end;

OnMyMobDead:
	if (mobcount("que_qsch03","#sch03_stone01::OnMyMobDead") == 0) {
		set $gqse_sch03_nm,$gqse_sch03_nm+1;
		donpcevent "#nmsomsch03_jin01::OnDisable";
		if ($gqse_sch03_nm == 3) {
			donpcevent "Wish Maiden#sch03_boss::Onfight";
		}
	}
	end;
}

que_qsch03,275,299,0	script	#nmsomsch03_jin02	-1,{
OnEnable:
	initnpctimer;
	end;

OnDisable:
	killmonster "que_qsch03","#nmsomsch03_jin02::OnMyMobDead";
	stopnpctimer;
	end;

OnTimer5000:
	mapannounce "que_qsch03","L'Assemblée des Mages de l'Est invoque des Chasseurs Sanguinaires.",bc_map,"0x4d4dff";
	monster "que_qsch03",263,292,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",264,291,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",265,290,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",266,289,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",267,288,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",268,287,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",269,286,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",270,285,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",271,284,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",272,283,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",265,294,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",266,293,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",267,292,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",268,291,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",269,290,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",270,289,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",271,288,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",272,287,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",273,286,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",274,285,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",267,296,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",268,295,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",269,294,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",270,283,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",271,282,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",272,281,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",273,280,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",274,279,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",275,276,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",276,275,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	end;

OnTimer25000:
OnTimer55000:
OnTimer85000:
OnTimer120000:
	monster "que_qsch03",274,301,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",275,301,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",276,301,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",277,301,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",278,300,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",279,299,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",279,298,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",279,297,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",279,296,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",278,295,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",277,294,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",276,294,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",275,294,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",274,294,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",273,295,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",272,296,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",272,297,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",272,298,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",272,299,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	monster "que_qsch03",273,300,"Chasseur Sanguinaire",1753,1,"#nmsomsch03_jin02::OnMyMobDead";
	end;

OnTimer180000:
	stopnpctimer;
	end;

OnMyMobDead:
	end;
}

que_qsch03,2,9,0	script	#sch03_stone02	844,{
OnEnable:
	monster "que_qsch03",275,301,"Gardien de la Magie",1753,1,"#sch03_stone02::OnMyMobDead";
	monster "que_qsch03",277,301,"Gardien de la Magie",1753,1,"#sch03_stone02::OnMyMobDead";
	monster "que_qsch03",279,299,"Gardien de la Magie",1753,1,"#sch03_stone02::OnMyMobDead";
	monster "que_qsch03",279,297,"Gardien de la Magie",1753,1,"#sch03_stone02::OnMyMobDead";
	monster "que_qsch03",278,295,"Gardien de la Magie",1753,1,"#sch03_stone02::OnMyMobDead";
	monster "que_qsch03",276,294,"Gardien de la Magie",1753,1,"#sch03_stone02::OnMyMobDead";
	monster "que_qsch03",274,294,"Gardien de la Magie",1753,1,"#sch03_stone02::OnMyMobDead";
	monster "que_qsch03",272,296,"Gardien de la Magie",1753,1,"#sch03_stone02::OnMyMobDead";
	monster "que_qsch03",272,298,"Gardien de la Magie",1753,1,"#sch03_stone02::OnMyMobDead";
	monster "que_qsch03",273,300,"Gardien de la Magie",1753,1,"#sch03_stone02::OnMyMobDead";
	end;

Onreset:
	killmonster "que_qsch03","#sch03_stone02::OnMyMobDead";
	end;

OnMyMobDead:
	if (mobcount("que_qsch03","#sch03_stone02::OnMyMobDead") == 0) {
		set $gqse_sch03_nm,$gqse_sch03_nm+1;
		donpcevent "#nmsomsch03_jin02::OnDisable";
		if ($gqse_sch03_nm == 3) {
			donpcevent "Wish Maiden#sch03_boss::Onfight";
		}
	}
	end;
}

que_qsch03,251,340,0	script	#nmsomsch03_jin03	-1,{
OnEnable:
	initnpctimer;
	end;

OnDisable:
	killmonster "que_qsch03","#nmsomsch03_jin03::OnMyMobDead";
	stopnpctimer;
	end;

OnTimer5000:
	mapannounce "que_qsch03","L'Assemblée des Mages du Nord invoque des Gardiens du Temple.",bc_map,"0x4d4dff";
	monster "que_qsch03",247,329,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",249,329,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",251,329,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",253,329,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",255,329,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",243,339,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",245,337,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",247,335,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",247,333,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",254,333,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",256,335,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",258,337,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",260,339,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	end;

OnTimer120000:
	monster "que_qsch03",251,343,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",252,343,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",255,341,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",255,340,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",254,337,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",253,336,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",250,336,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",249,337,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",248,340,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",248,341,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	end;

OnTimer240000:
	monster "que_qsch03",250,343,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",252,343,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",254,342,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",255,340,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",255,338,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",253,336,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",250,336,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",248,338,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",248,340,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",249,342,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	end;

OnTimer360000:
	monster "que_qsch03",250,343,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",252,343,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",254,342,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",255,340,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",255,338,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",253,336,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",251,336,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",249,337,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",248,339,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	monster "que_qsch03",248,341,"Gardien du Temple",1933,1,"#nmsomsch03_jin03::OnMyMobDead";
	stopnpctimer;
	end;

OnMyMobDead:
	end;
}

que_qsch03,2,10,0	script	#sch03_stone03	844,{
OnEnable:
	monster "que_qsch03",251,343,"Gardien de la Magie",1933,1,"#sch03_stone03::OnMyMobDead";
	monster "que_qsch03",252,343,"Gardien de la Magie",1933,1,"#sch03_stone03::OnMyMobDead";
	monster "que_qsch03",255,341,"Gardien de la Magie",1933,1,"#sch03_stone03::OnMyMobDead";
	monster "que_qsch03",255,340,"Gardien de la Magie",1933,1,"#sch03_stone03::OnMyMobDead";
	monster "que_qsch03",254,337,"Gardien de la Magie",1933,1,"#sch03_stone03::OnMyMobDead";
	monster "que_qsch03",253,336,"Gardien de la Magie",1933,1,"#sch03_stone03::OnMyMobDead";
	monster "que_qsch03",250,336,"Gardien de la Magie",1933,1,"#sch03_stone03::OnMyMobDead";
	monster "que_qsch03",249,337,"Gardien de la Magie",1933,1,"#sch03_stone03::OnMyMobDead";
	monster "que_qsch03",248,340,"Gardien de la Magie",1933,1,"#sch03_stone03::OnMyMobDead";
	monster "que_qsch03",248,341,"Gardien de la Magie",1933,1,"#sch03_stone03::OnMyMobDead";
	end;

Onreset:
	killmonster "que_qsch03","#sch03_stone03::OnMyMobDead";
	end;

OnMyMobDead:
	if (mobcount("que_qsch03","#sch03_stone03::OnMyMobDead") == 0) {
		set $gqse_sch03_nm,$gqse_sch03_nm+1;
		donpcevent "#nmsomsch03_jin03::OnDisable";

		if ($gqse_sch03_nm == 3) {
			donpcevent "Wish Maiden#sch03_boss::Onfight";
		}
	}
	end;
}

que_qsch03,235,285,5	script	Gardien des Ombres::Guard of Shadow#sch03_01	1752,4,4,{
OnInit:
	disablenpc "Guard of Shadow#sch03_01";
	end;

OnDisable:
	killmonster "que_qsch03","Guard of Shadow#sch03_01::OnMyMobDead";
	disablenpc "Guard of Shadow#sch03_01";
	end;

OnTouch:
	disablenpc "Guard of Shadow#sch03_01";
	monster "que_qsch03",234,284,"Gardien des Ombres",1752,1,"Guard of Shadow#sch03_01::OnMyMobDead";
	monster "que_qsch03",235,285,"Gardien des Ombres",1752,1,"Guard of Shadow#sch03_01::OnMyMobDead";
	monster "que_qsch03",236,286,"Gardien des Ombres",1752,1,"Guard of Shadow#sch03_01::OnMyMobDead";
	end;

OnMyMobDead:
	end;
}

que_qsch03,224,290,5	script	Gardien des Ombres::Guard of Shadow#sch03_02	1752,4,4,{
OnInit:
	disablenpc "Guard of Shadow#sch03_02";
	end;

OnDisable:
	killmonster "que_qsch03","Guard of Shadow#sch03_01::OnMyMobDead";
	disablenpc "Guard of Shadow#sch03_02";
	end;

OnTouch:
	disablenpc "Guard of Shadow#sch03_02";
	monster "que_qsch03",223,289,"Gardien des Ombres",1752,1,"Guard of Shadow#sch03_02::OnMyMobDead";
	monster "que_qsch03",224,290,"Gardien des Ombres",1752,1,"Guard of Shadow#sch03_02::OnMyMobDead";
	monster "que_qsch03",225,291,"Gardien des Ombres",1752,1,"Guard of Shadow#sch03_02::OnMyMobDead";
	end;

OnMyMobDead:
	end;
}

que_qsch03,236,296,5	script	Gardien des Ombres::Guard of Shadow#sch03_03	1752,4,4,{
OnInit:
	disablenpc "Guard of Shadow#sch03_03";
	end;

OnDisable:
	killmonster "que_qsch03","Guard of Shadow#sch03_03::OnMyMobDead";
	disablenpc "Guard of Shadow#sch03_03";
	end;

OnTouch:
	disablenpc "Guard of Shadow#sch03_03";
	monster "que_qsch03",235,295,"Gardien des Ombres",1752,1,"Guard of Shadow#sch03_03::OnMyMobDead";
	monster "que_qsch03",236,296,"Gardien des Ombres",1752,1,"Guard of Shadow#sch03_03::OnMyMobDead";
	monster "que_qsch03",237,297,"Gardien des Ombres",1752,1,"Guard of Shadow#sch03_03::OnMyMobDead";
	end;

OnMyMobDead:
	end;
}

que_qsch03,225,303,5	script	Gardien des Ombres::Guard of Shadow#sch03_04	1752,4,4,{
OnInit:
	disablenpc "Guard of Shadow#sch03_04";
	end;

OnDisable:
	killmonster "que_qsch03","Guard of Shadow#sch03_04::OnMyMobDead";
	disablenpc "Guard of Shadow#sch03_04";
	end;

OnTouch:
	disablenpc "Guard of Shadow#sch03_04";
	monster "que_qsch03",224,302,"Gardien des Ombres",1752,1,"Guard of Shadow#sch03_04::OnMyMobDead";
	monster "que_qsch03",225,303,"Gardien des Ombres",1752,1,"Guard of Shadow#sch03_04::OnMyMobDead";
	monster "que_qsch03",226,304,"Gardien des Ombres",1752,1,"Guard of Shadow#sch03_04::OnMyMobDead";
	end;

OnMyMobDead:
	end;
}

que_qsch03,266,296,3	script	Gardien du Temple::Temple Guard#sch03_ac01	1753,4,4,{
OnInit:
	disablenpc "Temple Guard#sch03_ac01";
	end;

OnDisable:
	killmonster "que_qsch03","Temple Guard#sch03_ac01::OnMyMobDead";
	disablenpc "Temple Guard#sch03_ac01";
	end;

OnTouch:
	disablenpc "Temple Guard#sch03_ac01";
	monster "que_qsch03",265,297,"Chasseur Sanguinaire",1753,1,"Temple Guard#sch03_ac01::OnMyMobDead";
	monster "que_qsch03",266,296,"Chasseur Sanguinaire",1753,1,"Temple Guard#sch03_ac01::OnMyMobDead";
	monster "que_qsch03",267,295,"Chasseur Sanguinaire",1753,1,"Temple Guard#sch03_ac01::OnMyMobDead";
	end;

OnMyMobDead:
	end;
}

que_qsch03,271,283,3	script	Gardien du Temple::Temple Guard#sch03_ac02	1753,4,4,{
OnInit:
	disablenpc "Temple Guard#sch03_ac02";
	end;

OnDisable:
	killmonster "que_qsch03","Temple Guard#sch03_ac02::OnMyMobDead";
	disablenpc "Temple Guard#sch03_ac02";
	end;

OnTouch:
	disablenpc "Temple Guard#sch03_ac02";
	monster "que_qsch03",270,284,"Chasseur Sanguinaire",1753,1,"Temple Guard#sch03_ac02::OnMyMobDead";
	monster "que_qsch03",271,283,"Chasseur Sanguinaire",1753,1,"Temple Guard#sch03_ac02::OnMyMobDead";
	monster "que_qsch03",272,282,"Chasseur Sanguinaire",1753,1,"Temple Guard#sch03_ac02::OnMyMobDead";
	end;

OnMyMobDead:
	end;
}

que_qsch03,270,307,3	script	Gardien du Temple::Temple Guard#sch03_ac03	1753,4,4,{
OnInit:
	disablenpc "Temple Guard#sch03_ac03";
	end;

OnDisable:
	killmonster "que_qsch03","Temple Guard#sch03_ac03::OnMyMobDead";
	disablenpc "Temple Guard#sch03_ac03";
	end;

OnTouch:
	disablenpc "Temple Guard#sch03_ac03";
	monster "que_qsch03",269,308,"Chasseur Sanguinaire",1753,1,"Temple Guard#sch03_ac03::OnMyMobDead";
	monster "que_qsch03",270,307,"Chasseur Sanguinaire",1753,1,"Temple Guard#sch03_ac03::OnMyMobDead";
	monster "que_qsch03",271,306,"Chasseur Sanguinaire",1753,1,"Temple Guard#sch03_ac03::OnMyMobDead";
	end;

OnMyMobDead:
	end;
}

que_qsch03,279,300,3	script	Gardien du Temple::Temple Guard#sch03_ac04	1753,4,4,{
OnInit:
	disablenpc "Temple Guard#sch03_ac04";
	end;

OnDisable:
	killmonster "que_qsch03","Temple Guard#sch03_ac04::OnMyMobDead";
	disablenpc "Temple Guard#sch03_ac04";
	end;

OnTouch:
	disablenpc "Temple Guard#sch03_ac04";
	monster "que_qsch03",278,301,"Chasseur Sanguinaire",1753,1,"Temple Guard#sch03_ac04::OnMyMobDead";
	monster "que_qsch03",279,300,"Chasseur Sanguinaire",1753,1,"Temple Guard#sch03_ac04::OnMyMobDead";
	monster "que_qsch03",280,299,"Chasseur Sanguinaire",1753,1,"Temple Guard#sch03_ac04::OnMyMobDead";
	end;

OnMyMobDead:
	end;
}

que_qsch03,247,330,5	script	Gardien du Temple::Temple Keeper#sch03_ac01	1933,4,4,{
OnInit:
	disablenpc "Temple Keeper#sch03_ac01";
	end;

OnDisable:
	killmonster "que_qsch03","Temple Keeper#sch03_ac01::OnMyMobDead";
	disablenpc "Temple Keeper#sch03_ac01";
	end;

OnTouch:
	disablenpc "Temple Keeper#sch03_ac01";
	monster "que_qsch03",246,330,"Gardien du Temple",1933,1,"Temple Keeper#sch03_ac01::OnMyMobDead";
	monster "que_qsch03",247,330,"Gardien du Temple",1933,1,"Temple Keeper#sch03_ac01::OnMyMobDead";
	monster "que_qsch03",248,330,"Gardien du Temple",1933,1,"Temple Keeper#sch03_ac01::OnMyMobDead";
	end;

OnMyMobDead:
	end;
}

que_qsch03,255,330,3	script	Gardien du Temple::Temple Keeper#sch03_ac02	1933,4,4,{
OnInit:
	disablenpc "Temple Keeper#sch03_ac02";
	end;

OnDisable:
	killmonster "que_qsch03","Temple Keeper#sch03_ac02::OnMyMobDead";
	disablenpc "Temple Keeper#sch03_ac02";
	end;

OnTouch:
	disablenpc "Temple Keeper#sch03_ac02";
	monster "que_qsch03",254,330,"Gardien du Temple",1933,1,"Temple Keeper#sch03_ac02::OnMyMobDead";
	monster "que_qsch03",255,330,"Gardien du Temple",1933,1,"Temple Keeper#sch03_ac02::OnMyMobDead";
	monster "que_qsch03",256,330,"Gardien du Temple",1933,1,"Temple Keeper#sch03_ac02::OnMyMobDead";
	end;

OnMyMobDead:
	end;
}

que_qsch03,251,255,3	script	Dame aux Souhaits::Wish Maiden#sch03_boss	1931,{
OnInit:
	hideonnpc "Wish Maiden#sch03_boss";
	end;

OnDisable:
	killmonster "que_qsch03","Wish Maiden#sch03_boss::OnMyMobDead";
	hideonnpc "Wish Maiden#sch03_boss";
	stopnpctimer;
	end;

Onfight:
	initnpctimer;
	end;

OnTimer1000:
	mapannounce "que_qsch03","Dame aux Souhaits: Vous êtes arrivés jusqu'ici... Les gardiens sont-ils tous morts?",bc_map,"0x00ff00";
	end;

OnTimer4000:
	mapannounce "que_qsch03","Dame aux Souhaits: Que vos efforts soient récompensés! Soyez les bienvenus!",bc_map,"0x00ff00";
	end;

OnTimer5000:
	specialeffect EF_ICECRASH;
	hideonnpc "Wish Maiden#sch03_boss";
	specialeffect EF_SPHERE;
	monster "que_qsch03",252,340,"Wish Maiden",1931,1,"Wish Maiden#sch03_boss::OnMyMobDead";
	stopnpctimer;
	end;

OnMyMobDead:
	if (mobcount("que_qsch03","Wish Maiden#sch03_boss::OnMyMobDead") == 0) {
		donpcevent "#okolnir_sch03::Onstop";
		donpcevent "Wish Maiden#sch03_gift::OnEnable";
		mapannounce "que_qsch03","Dame aux Souhaits: ...Bien! Vous méritez les faveurs de la déesse.",bc_map,"0x00ff00";
	}
	end;
}

que_qsch03,252,340,3	script	Dame aux Souhaits::Wish Maiden#sch03_gift	403,{
	set .@GID, GetCastleData("schg_cas03",1);
	if (getcharid(2) == .@GID) {
		if (strcharinfo(0) == getguildmaster(.@GID)) {
			if ((countitem(7830) > 0) && (countitem(7831) > 0) && (countitem(7832) > 0) && (countitem(7833) > 0) && (countitem(7834) > 0) && (countitem(2357) > 0) && (countitem(7510) > 99) && (countitem(969) > 9) && (countitem(985) > 19)) {
				cutin "wish_maiden12",1;
				mes "[Dame aux Souhaits]";
				mes "Comme promis, je vais vous offrir le joyau de la déesse.";
				mes "Vous vous êtes montré digne de le porter...";
				next;
				mes "[Dame aux Souhaits]";
				mes "Vous allez recevoir le pouvoir de la grande Valkyrie...";
				next;
				mes "[Dame aux Souhaits]";
				mes "Je vais vous offrir quelques objets pour votre bon plaisir.";
				mes "Puissiez-vous en faire bon usage...";
				next;
				mes "[Dame aux Souhaits]";
				mes "Retournez à Rachel ou à Yuno, et allez trouver les soeurs Ravies.";
				next;
				cutin "wish_maiden32",1;
				mes "[Dame aux Souhaits]";
				mes "J'ouvrirai le portail pour que vous puissiez revenir ici.";
				mes "...Okolnir n'existera pas éternellement...";
				delitem 7830,1; //Goddess_Tear
				delitem 7831,1; //Valkyrie_Token
				delitem 7832,1; //Brynhild_Armor_Piece
				delitem 7833,1; //Hero_Remains
				delitem 7834,1; //Andvari_Ring
				delitem 2357,1; //Valkyrie_Armor
				delitem 7510,100; //Valhalla_Flower
				delitem 969,10; //Gold
				delitem 985,20; //Elunium
				getitem 2383,1; //Brynhild
				getitem 7840,1; //Valkyrie_Gift
				announce "["+ strcharinfo(0) +"], de la guilde ["+ GetGuildName(.@GID) +"] vient de rapporter une Brynhild dans ce monde.",bc_all,"0x70dbdb";
				close2;
				cutin "wish_maiden11",255;
				disablenpc "Wish Maiden#sch03_gift";
				enablenpc "#to_agit_sch03_gate";
				end;
			}
			else {
				cutin "wish_maiden13",1;
				mes "[Dame aux Souhaits]";
				mes "Comme je vous l'avais dit, vous êtes maintenant digne de porter une Brynhild.";
				mes "Cependant, vous n'avez pas les objets requis sur vous...";
				next;
				mes "[Dame aux Souhaits]";
				mes "...Auriez-vous oublié quelque chose?";
				close2;
			}
		}
		else {
			cutin "wish_maiden12",1;
			mes "[Dame aux Souhaits]";
			mes "Vous avez tous réussi à travailler en équipe...";
			mes "Les hommes sont forts lorsqu'ils sont unis, mais ils sont facilement corrompus par l'envie et la luxure.";
			next;
			mes "[Dame aux Souhaits]";
			mes "Les hommes sont imparfaits - c'est pour cette raison que les dieux sont là pour les aider lorsque le besoin s'en fait sentir.";
			mes "....";
			next;
			mes "[Dame aux Souhaits]";
			mes "Regardez toujours la vérité en face.";
			mes "Ne regrettez jamais vos actes...";
			close2;
		}
	}
	cutin "wish_maiden11",255;
	end;

OnInit:
	disablenpc "Wish Maiden#sch03_gift";
	end;

OnEnable:
	enablenpc "Wish Maiden#sch03_gift";
	initnpctimer;
	end;

OnDisable:
	disablenpc "Wish Maiden#sch03_gift";
	stopnpctimer;
	end;

OnTimer280000:
	mapannounce "que_qsch03","Dame aux Souhaits: ... Okolnir va bientôt disparaître... Je vais vous renvoyer là d'où vous venez.",bc_map,"0x00ff00";
	end;

OnTimer290000:
	mapwarp "que_qsch03","schg_cas03",81,95;
	donpcevent "#to_agit_sch03_gate::OnDisable";
	end;

OnTimer300000:
	donpcevent "#okolnir_sch03::OnDisable";
	set $gqse_sch03_miro,0;
	set $gqse_sch03_pcc,0;
	set $gqse_sch03_gd,0;
	set $gqse_sch03_nm,0;
	set $siz_sch03_on,2;
	donpcevent "#okolnir_sch03_time01::OnEnable";
	stopnpctimer;
	end;
}

que_qsch03,252,339,0	script	#to_agit_sch03_gate	45,1,1,{
OnInit:
	disablenpc "#to_agit_sch03_gate";
	end;

OnTouch:
	warp "schg_cas03",81,95;
	end;
}

que_qsch03,1,6,0	script	#okolnir_sch03_time01	844,{
OnInit:
	if ($siz_sch03_on == 2) {
		initnpctimer;
	}
	end;

OnEnable:
	set $gqse_sch03_time,0;
	initnpctimer;
	end;

Onreset:
	set $siz_sch03_on,0;
	set $gqse_sch03_time,0;
	stopnpctimer;
	end;

OnTimer3600000:
	if ($gqse_sch03_time < 12) {
		set $gqse_sch03_time,$gqse_sch03_time+1;
		initnpctimer;
	}
	else if ($gqse_sch03_time == 12) {
		set $siz_sch03_on,0;
		set $gqse_sch03_time,0;
		enablenpc "Wish Maiden#gq_sch03";
		enablenpc "Piamette#sch03";
		hideoffnpc "Wish Maiden#sch03_boss";
		stopnpctimer;
	}
	end;
}

que_qsch03,116,313,0,0	monster	--ja--	1932,1,180000,0,0
que_qsch03,120,285,0,0	monster	--ja--	1932,1,180000,0,0
que_qsch03,117,236,0,0	monster	--ja--	1932,1,180000,0,0
que_qsch03,103,223,0,0	monster	--ja--	1932,1,180000,0,0
que_qsch03,85,204,0,0	monster	--ja--	1932,1,180000,0,0
que_qsch03,79,186,0,0	monster	--ja--	1932,1,180000,0,0
que_qsch03,73,167,0,0	monster	--ja--	1932,1,180000,0,0
que_qsch03,68,150,0,0	monster	--ja--	1932,1,180000,0,0
que_qsch03,71,128,0,0	monster	--ja--	1932,1,180000,0,0
que_qsch03,69,118,0,0	monster	--ja--	1932,1,180000,0,0
que_qsch03,117,78,0,0	monster	--ja--	1932,1,180000,0,0
que_qsch03,110,79,0,0	monster	--ja--	1932,1,180000,0,0
que_qsch03,141,80,0,0	monster	--ja--	1932,1,180000,0,0
que_qsch03,158,84,0,0	monster	--ja--	1932,1,180000,0,0
que_qsch03,193,104,0,0	monster	--ja--	1932,1,180000,0,0
que_qsch03,119,269,0,0	monster	--ja--	1932,1,180000,0,0
que_qsch03,155,77,0,0	monster	--ja--	1932,1,180000,0,0
que_qsch03,110,317,0,0	monster	--ja--	1933,1,600000,0,0
que_qsch03,115,295,0,0	monster	--ja--	1933,1,1200000,0,0
que_qsch03,116,256,0,0	monster	--ja--	1933,1,600000,0,0
que_qsch03,113,242,0,0	monster	--ja--	1933,1,1200000,0,0
que_qsch03,99,223,0,0	monster	--ja--	1933,1,600000,0,0
que_qsch03,94,216,0,0	monster	--ja--	1933,1,1200000,0,0
que_qsch03,77,198,0,0	monster	--ja--	1933,1,600000,0,0
que_qsch03,70,174,0,0	monster	--ja--	1933,1,1200000,0,0
que_qsch03,72,147,0,0	monster	--ja--	1933,1,600000,0,0
que_qsch03,64,134,0,0	monster	--ja--	1933,1,1200000,0,0
que_qsch03,77,107,0,0	monster	--ja--	1933,1,600000,0,0
que_qsch03,84,88,0,0	monster	--ja--	1933,1,1200000,0,0
que_qsch03,98,82,0,0	monster	--ja--	1933,1,600000,0,0
que_qsch03,129,79,0,0	monster	--ja--	1933,1,1200000,0,0
que_qsch03,91,124,0,0	monster	--ja--	1933,1,600000,0,0
que_qsch03,173,95,0,0	monster	--ja--	1933,1,1200000,0,0
que_qsch03,179,127,0,0	monster	--ja--	1933,1,600000,0,0
que_qsch03,195,120,0,0	monster	--ja--	1933,1,1200000,0,0
que_qsch03,178,159,0,0	monster	--ja--	1933,1,600000,0,0
que_qsch03,88,145,0,0	monster	--ja--	1933,1,1200000,0,0
que_qsch03,94,157,0,0	monster	--ja--	1933,1,600000,0,0
que_qsch03,95,177,0,0	monster	--ja--	1933,1,1200000,0,0
que_qsch03,129,196,0,0	monster	--ja--	1933,1,600000,0,0
que_qsch03,154,196,0,0	monster	--ja--	1933,1,1200000,0,0
que_qsch03,170,187,0,0	monster	--ja--	1933,1,600000,0,0
que_qsch03,194,180,0,0	monster	--ja--	1933,1,1200000,0,0
que_qsch03,214,181,0,0	monster	--ja--	1933,1,600000,0,0
que_qsch03,243,199,0,0	monster	--ja--	1933,1,1200000,0,0
